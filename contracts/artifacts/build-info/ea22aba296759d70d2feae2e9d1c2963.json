{
	"id": "ea22aba296759d70d2feae2e9d1c2963",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ViewPure.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\";\r\n\r\ncontract ViewPure {\r\n    string value = \"Hello\";\r\n\r\n    uint256 number = 1234;\r\n\r\n    //pure不能get\r\n    // function pure_get_func() public pure returns (string memory) {\r\n    //     return value;\r\n    // }\r\n\r\n    function view_get_func() public view returns (string memory) {\r\n        return value;\r\n    }\r\n\r\n    //pure不能set\r\n    // function pure_set_func(string memory _value) public pure {\r\n    //     value = _value;\r\n    // }\r\n\r\n    //view不能set\r\n    // function view_set_func(string memory _value) public view {\r\n    //     value = _value;\r\n    // }\r\n\r\n    function view_set_func(string memory _value) public {\r\n        value = _value;\r\n    }\r\n\r\n    function toHexString() public view returns (string memory) {\r\n        string memory hexStr = Strings.toHexString(number);\r\n        return hexStr;\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ViewPure.sol": {
				"ViewPure": {
					"abi": [
						{
							"inputs": [],
							"name": "toHexString",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "view_get_func",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_value",
									"type": "string"
								}
							],
							"name": "view_set_func",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ViewPure.sol\":170:990  contract ViewPure {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ViewPure.sol\":195:217  string value = \"Hello\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x48656c6c6f000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/ViewPure.sol\":243:247  1234 */\n  0x04d2\n    /* \"contracts/ViewPure.sol\":226:247  uint256 number = 1234 */\n  0x01\n  sstore\n    /* \"contracts/ViewPure.sol\":170:990  contract ViewPure {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_5\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_8\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_7)\ntag_8:\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_7)\ntag_9:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_7\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_7:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:327   */\ntag_6:\n    /* \"#utility.yul\":51:57   */\n  0x00\n    /* \"#utility.yul\":88:89   */\n  0x02\n    /* \"#utility.yul\":82:86   */\n  dup3\n    /* \"#utility.yul\":78:90   */\n  div\n    /* \"#utility.yul\":68:90   */\n  swap1\n  pop\n    /* \"#utility.yul\":135:136   */\n  0x01\n    /* \"#utility.yul\":129:133   */\n  dup3\n    /* \"#utility.yul\":125:137   */\n  and\n    /* \"#utility.yul\":156:174   */\n  dup1\n    /* \"#utility.yul\":146:227   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":212:216   */\n  0x7f\n    /* \"#utility.yul\":204:210   */\n  dup3\n    /* \"#utility.yul\":200:217   */\n  and\n    /* \"#utility.yul\":190:217   */\n  swap2\n  pop\n    /* \"#utility.yul\":146:227   */\ntag_18:\n    /* \"#utility.yul\":274:276   */\n  0x20\n    /* \"#utility.yul\":266:272   */\n  dup3\n    /* \"#utility.yul\":263:277   */\n  lt\n    /* \"#utility.yul\":243:261   */\n  dup2\n    /* \"#utility.yul\":240:278   */\n  eq\n    /* \"#utility.yul\":237:321   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":293:311   */\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":237:321   */\ntag_19:\n    /* \"#utility.yul\":58:327   */\n  pop\n    /* \"#utility.yul\":7:327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:513   */\ntag_21:\n    /* \"#utility.yul\":381:458   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":378:379   */\n  0x00\n    /* \"#utility.yul\":371:459   */\n  mstore\n    /* \"#utility.yul\":478:482   */\n  0x22\n    /* \"#utility.yul\":475:476   */\n  0x04\n    /* \"#utility.yul\":468:483   */\n  mstore\n    /* \"#utility.yul\":502:506   */\n  0x24\n    /* \"#utility.yul\":499:500   */\n  0x00\n    /* \"#utility.yul\":492:507   */\n  revert\n    /* \"contracts/ViewPure.sol\":170:990  contract ViewPure {\r... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ViewPure.sol\":170:990  contract ViewPure {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x93ebbd92\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbd1b8531\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbfc66066\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ViewPure.sol\":386:478  function view_get_func() public view returns (string memory) {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ViewPure.sol\":835:987  function toHexString() public view returns (string memory) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ViewPure.sol\":742:827  function view_set_func(string memory _value) public {\r... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/ViewPure.sol\":386:478  function view_get_func() public view returns (string memory) {\r... */\n    tag_7:\n        /* \"contracts/ViewPure.sol\":432:445  string memory */\n      0x60\n        /* \"contracts/ViewPure.sol\":465:470  value */\n      0x00\n        /* \"contracts/ViewPure.sol\":458:470  return value */\n      dup1\n      sload\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_20\n      swap1\n      tag_19\n      jump\t// in\n    tag_20:\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_22\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_21)\n    tag_22:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_23:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_23\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ViewPure.sol\":386:478  function view_get_func() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ViewPure.sol\":835:987  function toHexString() public view returns (string memory) {\r... */\n    tag_11:\n        /* \"contracts/ViewPure.sol\":879:892  string memory */\n      0x60\n        /* \"contracts/ViewPure.sol\":905:925  string memory hexStr */\n      0x00\n        /* \"contracts/ViewPure.sol\":928:955  Strings.toHexString(number) */\n      tag_25\n        /* \"contracts/ViewPure.sol\":948:954  number */\n      sload(0x01)\n        /* \"contracts/ViewPure.sol\":928:947  Strings.toHexString */\n      tag_26\n        /* \"contracts/ViewPure.sol\":928:955  Strings.toHexString(number) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/ViewPure.sol\":905:955  string memory hexStr = Strings.toHexString(number) */\n      swap1\n      pop\n        /* \"contracts/ViewPure.sol\":973:979  hexStr */\n      dup1\n        /* \"contracts/ViewPure.sol\":966:979  return hexStr */\n      swap2\n      pop\n      pop\n        /* \"contracts/ViewPure.sol\":835:987  function toHexString() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ViewPure.sol\":742:827  function view_set_func(string memory _value) public {\r... */\n    tag_16:\n        /* \"contracts/ViewPure.sol\":813:819  _value */\n      dup1\n        /* \"contracts/ViewPure.sol\":805:810  value */\n      0x00\n        /* \"contracts/ViewPure.sol\":805:819  value = _value */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      pop\n        /* \"contracts/ViewPure.sol\":742:827  function view_set_func(string memory _value) public {\r... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1521:1695  function toHexString(uint256 value) internal pure returns (string memory) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1580:1593  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1636:1678  toHexString(value, Math.log256(value) + 1) */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1648:1653  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1676:1677  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1655:1673  Math.log256(value) */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1667:1672  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1655:1666  Math.log256 */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1655:1673  Math.log256(value) */\n      jump\t// in\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1655:1677  Math.log256(value) + 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1636:1647  toHexString */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1636:1678  toHexString(value, Math.log256(value) + 1) */\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1629:1678  return toHexString(value, Math.log256(value) + 1) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1521:1695  function toHexString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11415:12078  function log256(uint256 value) internal pure returns (uint256) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11469:11476  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11488:11502  uint256 result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11505:11506  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11488:11506  uint256 result = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11559:11560  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11553:11556  128 */\n      0x80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11544:11549  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11544:11556  value >> 128 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11544:11560  value >> 128 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11540:11638  if (value >> 128 > 0) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11590:11593  128 */\n      0x80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11580:11593  value >>= 128 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11621:11623  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11611:11623  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11540:11638  if (value >> 128 > 0) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11669:11670  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11664:11666  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11655:11660  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11655:11666  value >> 64 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11655:11670  value >> 64 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11651:11746  if (value >> 64 > 0) {... */\n      iszero\n      tag_37\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11700:11702  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11690:11702  value >>= 64 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11730:11731  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11720:11731  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11651:11746  if (value >> 64 > 0) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11777:11778  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11772:11774  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11763:11768  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11763:11774  value >> 32 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11763:11778  value >> 32 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11759:11854  if (value >> 32 > 0) {... */\n      iszero\n      tag_38\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11808:11810  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11798:11810  value >>= 32 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11838:11839  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11828:11839  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11759:11854  if (value >> 32 > 0) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11885:11886  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11880:11882  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11871:11876  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11871:11882  value >> 16 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11871:11886  value >> 16 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11867:11962  if (value >> 16 > 0) {... */\n      iszero\n      tag_39\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11916:11918  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11906:11918  value >>= 16 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11946:11947  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11936:11947  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11867:11962  if (value >> 16 > 0) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11992:11993  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11988:11989  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11979:11984  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11979:11989  value >> 8 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11979:11993  value >> 8 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11975:12039  if (value >> 8 > 0) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12023:12024  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12013:12024  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11975:12039  if (value >> 8 > 0) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12065:12071  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12058:12071  return result */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":11415:12078  function log256(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n    tag_46:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_49:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_54\n      tag_52\n      jump\t// in\n    tag_54:\n    tag_53:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_58\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_59\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_52\n      jump\t// in\n    tag_61:\n    tag_60:\n      byte\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_52\n      jump\t// in\n    tag_63:\n    tag_62:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_55)\n    tag_56:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_29:\n      dup3\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_19\n      jump\t// in\n    tag_69:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_71\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_70)\n    tag_71:\n      dup3\n      0x1f\n      lt\n      tag_72\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_70)\n    tag_72:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_70\n      jumpi\n      swap2\n      dup3\n      add\n    tag_73:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_73)\n    tag_74:\n    tag_70:\n      pop\n      swap1\n      pop\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      pop\n      swap1\n      jump\t// out\n    tag_76:\n    tag_77:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_77)\n    tag_78:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:419   */\n    tag_80:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_82\n        /* \"#utility.yul\":126:175   */\n      tag_83\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":110:176   */\n      tag_85\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:363   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":282:361   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":251:363   */\n    tag_86:\n        /* \"#utility.yul\":372:413   */\n      tag_89\n        /* \"#utility.yul\":406:412   */\n      dup5\n        /* \"#utility.yul\":401:404   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":372:413   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":91:419   */\n      pop\n        /* \"#utility.yul\":7:419   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":439:779   */\n    tag_91:\n        /* \"#utility.yul\":495:500   */\n      0x00\n        /* \"#utility.yul\":544:547   */\n      dup3\n        /* \"#utility.yul\":537:541   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:542   */\n      add\n        /* \"#utility.yul\":521:548   */\n      slt\n        /* \"#utility.yul\":511:633   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":552:631   */\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":511:633   */\n    tag_93:\n        /* \"#utility.yul\":669:675   */\n      dup2\n        /* \"#utility.yul\":656:676   */\n      calldataload\n        /* \"#utility.yul\":694:773   */\n      tag_96\n        /* \"#utility.yul\":769:772   */\n      dup5\n        /* \"#utility.yul\":761:767   */\n      dup3\n        /* \"#utility.yul\":754:758   */\n      0x20\n        /* \"#utility.yul\":746:752   */\n      dup7\n        /* \"#utility.yul\":742:759   */\n      add\n        /* \"#utility.yul\":694:773   */\n      tag_80\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":685:773   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:779   */\n      pop\n        /* \"#utility.yul\":439:779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":785:1294   */\n    tag_15:\n        /* \"#utility.yul\":854:860   */\n      0x00\n        /* \"#utility.yul\":903:905   */\n      0x20\n        /* \"#utility.yul\":891:900   */\n      dup3\n        /* \"#utility.yul\":882:889   */\n      dup5\n        /* \"#utility.yul\":878:901   */\n      sub\n        /* \"#utility.yul\":874:906   */\n      slt\n        /* \"#utility.yul\":871:990   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":909:988   */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":871:990   */\n    tag_98:\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1046:1055   */\n      dup3\n        /* \"#utility.yul\":1042:1059   */\n      add\n        /* \"#utility.yul\":1029:1060   */\n      calldataload\n        /* \"#utility.yul\":1087:1105   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1079:1085   */\n      dup2\n        /* \"#utility.yul\":1076:1106   */\n      gt\n        /* \"#utility.yul\":1073:1190   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1109:1188   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1073:1190   */\n    tag_101:\n        /* \"#utility.yul\":1214:1277   */\n      tag_104\n        /* \"#utility.yul\":1269:1276   */\n      dup5\n        /* \"#utility.yul\":1260:1266   */\n      dup3\n        /* \"#utility.yul\":1249:1258   */\n      dup6\n        /* \"#utility.yul\":1245:1267   */\n      add\n        /* \"#utility.yul\":1214:1277   */\n      tag_91\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1204:1277   */\n      swap2\n      pop\n        /* \"#utility.yul\":1000:1287   */\n      pop\n        /* \"#utility.yul\":785:1294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1664   */\n    tag_105:\n        /* \"#utility.yul\":1388:1391   */\n      0x00\n        /* \"#utility.yul\":1416:1455   */\n      tag_107\n        /* \"#utility.yul\":1449:1454   */\n      dup3\n        /* \"#utility.yul\":1416:1455   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1471:1542   */\n      tag_109\n        /* \"#utility.yul\":1535:1541   */\n      dup2\n        /* \"#utility.yul\":1530:1533   */\n      dup6\n        /* \"#utility.yul\":1471:1542   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1464:1542   */\n      swap4\n      pop\n        /* \"#utility.yul\":1551:1603   */\n      tag_111\n        /* \"#utility.yul\":1596:1602   */\n      dup2\n        /* \"#utility.yul\":1591:1594   */\n      dup6\n        /* \"#utility.yul\":1584:1588   */\n      0x20\n        /* \"#utility.yul\":1577:1582   */\n      dup7\n        /* \"#utility.yul\":1573:1589   */\n      add\n        /* \"#utility.yul\":1551:1603   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1628:1657   */\n      tag_113\n        /* \"#utility.yul\":1650:1656   */\n      dup2\n        /* \"#utility.yul\":1628:1657   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1623:1626   */\n      dup5\n        /* \"#utility.yul\":1619:1658   */\n      add\n        /* \"#utility.yul\":1612:1658   */\n      swap2\n      pop\n        /* \"#utility.yul\":1392:1664   */\n      pop\n        /* \"#utility.yul\":1300:1664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1670:2036   */\n    tag_115:\n        /* \"#utility.yul\":1812:1815   */\n      0x00\n        /* \"#utility.yul\":1833:1900   */\n      tag_117\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1892:1895   */\n      dup4\n        /* \"#utility.yul\":1833:1900   */\n      tag_110\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1826:1900   */\n      swap2\n      pop\n        /* \"#utility.yul\":1909:2002   */\n      tag_118\n        /* \"#utility.yul\":1998:2001   */\n      dup3\n        /* \"#utility.yul\":1909:2002   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2022:2025   */\n      dup3\n        /* \"#utility.yul\":2018:2030   */\n      add\n        /* \"#utility.yul\":2011:2030   */\n      swap1\n      pop\n        /* \"#utility.yul\":1670:2036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2042:2355   */\n    tag_9:\n        /* \"#utility.yul\":2155:2159   */\n      0x00\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2182:2191   */\n      dup3\n        /* \"#utility.yul\":2178:2196   */\n      add\n        /* \"#utility.yul\":2170:2196   */\n      swap1\n      pop\n        /* \"#utility.yul\":2242:2251   */\n      dup2\n        /* \"#utility.yul\":2236:2240   */\n      dup2\n        /* \"#utility.yul\":2232:2252   */\n      sub\n        /* \"#utility.yul\":2228:2229   */\n      0x00\n        /* \"#utility.yul\":2217:2226   */\n      dup4\n        /* \"#utility.yul\":2213:2230   */\n      add\n        /* \"#utility.yul\":2206:2253   */\n      mstore\n        /* \"#utility.yul\":2270:2348   */\n      tag_121\n        /* \"#utility.yul\":2343:2347   */\n      dup2\n        /* \"#utility.yul\":2334:2340   */\n      dup5\n        /* \"#utility.yul\":2270:2348   */\n      tag_105\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2262:2348   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2361:2780   */\n    tag_68:\n        /* \"#utility.yul\":2527:2531   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x20\n        /* \"#utility.yul\":2554:2563   */\n      dup3\n        /* \"#utility.yul\":2550:2568   */\n      add\n        /* \"#utility.yul\":2542:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2614:2623   */\n      dup2\n        /* \"#utility.yul\":2608:2612   */\n      dup2\n        /* \"#utility.yul\":2604:2624   */\n      sub\n        /* \"#utility.yul\":2600:2601   */\n      0x00\n        /* \"#utility.yul\":2589:2598   */\n      dup4\n        /* \"#utility.yul\":2585:2602   */\n      add\n        /* \"#utility.yul\":2578:2625   */\n      mstore\n        /* \"#utility.yul\":2642:2773   */\n      tag_123\n        /* \"#utility.yul\":2768:2772   */\n      dup2\n        /* \"#utility.yul\":2642:2773   */\n      tag_115\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2634:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2361:2780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2915   */\n    tag_85:\n        /* \"#utility.yul\":2820:2826   */\n      0x00\n        /* \"#utility.yul\":2847:2867   */\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2837:2867   */\n      swap1\n      pop\n        /* \"#utility.yul\":2876:2909   */\n      tag_127\n        /* \"#utility.yul\":2904:2908   */\n      dup3\n        /* \"#utility.yul\":2896:2902   */\n      dup3\n        /* \"#utility.yul\":2876:2909   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2786:2915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2921:2996   */\n    tag_126:\n        /* \"#utility.yul\":2954:2960   */\n      0x00\n        /* \"#utility.yul\":2987:2989   */\n      0x40\n        /* \"#utility.yul\":2981:2990   */\n      mload\n        /* \"#utility.yul\":2971:2990   */\n      swap1\n      pop\n        /* \"#utility.yul\":2921:2996   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3002:3310   */\n    tag_84:\n        /* \"#utility.yul\":3064:3068   */\n      0x00\n        /* \"#utility.yul\":3154:3172   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3146:3152   */\n      dup3\n        /* \"#utility.yul\":3143:3173   */\n      gt\n        /* \"#utility.yul\":3140:3196   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3176:3194   */\n      tag_132\n      tag_48\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3140:3196   */\n    tag_131:\n        /* \"#utility.yul\":3214:3243   */\n      tag_133\n        /* \"#utility.yul\":3236:3242   */\n      dup3\n        /* \"#utility.yul\":3214:3243   */\n      tag_114\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3206:3243   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3302   */\n      0x20\n        /* \"#utility.yul\":3292:3296   */\n      dup2\n        /* \"#utility.yul\":3288:3303   */\n      add\n        /* \"#utility.yul\":3280:3303   */\n      swap1\n      pop\n        /* \"#utility.yul\":3002:3310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3316:3415   */\n    tag_108:\n        /* \"#utility.yul\":3368:3374   */\n      0x00\n        /* \"#utility.yul\":3402:3407   */\n      dup2\n        /* \"#utility.yul\":3396:3408   */\n      mload\n        /* \"#utility.yul\":3386:3408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3316:3415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3421:3590   */\n    tag_110:\n        /* \"#utility.yul\":3505:3516   */\n      0x00\n        /* \"#utility.yul\":3539:3545   */\n      dup3\n        /* \"#utility.yul\":3534:3537   */\n      dup3\n        /* \"#utility.yul\":3527:3546   */\n      mstore\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3574:3577   */\n      dup3\n        /* \"#utility.yul\":3570:3584   */\n      add\n        /* \"#utility.yul\":3555:3584   */\n      swap1\n      pop\n        /* \"#utility.yul\":3421:3590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3901   */\n    tag_45:\n        /* \"#utility.yul\":3636:3639   */\n      0x00\n        /* \"#utility.yul\":3655:3675   */\n      tag_137\n        /* \"#utility.yul\":3673:3674   */\n      dup3\n        /* \"#utility.yul\":3655:3675   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3650:3675   */\n      swap2\n      pop\n        /* \"#utility.yul\":3689:3709   */\n      tag_139\n        /* \"#utility.yul\":3707:3708   */\n      dup4\n        /* \"#utility.yul\":3689:3709   */\n      tag_138\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3684:3709   */\n      swap3\n      pop\n        /* \"#utility.yul\":3843:3844   */\n      dup3\n        /* \"#utility.yul\":3775:3841   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3771:3845   */\n      sub\n        /* \"#utility.yul\":3768:3769   */\n      dup3\n        /* \"#utility.yul\":3765:3846   */\n      gt\n        /* \"#utility.yul\":3762:3869   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3849:3867   */\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3762:3869   */\n    tag_140:\n        /* \"#utility.yul\":3893:3894   */\n      dup3\n        /* \"#utility.yul\":3890:3891   */\n      dup3\n        /* \"#utility.yul\":3886:3895   */\n      add\n        /* \"#utility.yul\":3879:3895   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3907:4255   */\n    tag_43:\n        /* \"#utility.yul\":3947:3954   */\n      0x00\n        /* \"#utility.yul\":3970:3990   */\n      tag_144\n        /* \"#utility.yul\":3988:3989   */\n      dup3\n        /* \"#utility.yul\":3970:3990   */\n      tag_138\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3965:3990   */\n      swap2\n      pop\n        /* \"#utility.yul\":4004:4024   */\n      tag_145\n        /* \"#utility.yul\":4022:4023   */\n      dup4\n        /* \"#utility.yul\":4004:4024   */\n      tag_138\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3999:4024   */\n      swap3\n      pop\n        /* \"#utility.yul\":4192:4193   */\n      dup2\n        /* \"#utility.yul\":4124:4190   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4120:4194   */\n      div\n        /* \"#utility.yul\":4117:4118   */\n      dup4\n        /* \"#utility.yul\":4114:4195   */\n      gt\n        /* \"#utility.yul\":4109:4110   */\n      dup3\n        /* \"#utility.yul\":4102:4111   */\n      iszero\n        /* \"#utility.yul\":4095:4112   */\n      iszero\n        /* \"#utility.yul\":4091:4196   */\n      and\n        /* \"#utility.yul\":4088:4219   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4199:4217   */\n      tag_147\n      tag_142\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4088:4219   */\n    tag_146:\n        /* \"#utility.yul\":4247:4248   */\n      dup3\n        /* \"#utility.yul\":4244:4245   */\n      dup3\n        /* \"#utility.yul\":4240:4249   */\n      mul\n        /* \"#utility.yul\":4229:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3907:4255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4261:4338   */\n    tag_138:\n        /* \"#utility.yul\":4298:4305   */\n      0x00\n        /* \"#utility.yul\":4327:4332   */\n      dup2\n        /* \"#utility.yul\":4316:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":4261:4338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4344:4498   */\n    tag_90:\n        /* \"#utility.yul\":4428:4434   */\n      dup3\n        /* \"#utility.yul\":4423:4426   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup4\n        /* \"#utility.yul\":4405:4435   */\n      calldatacopy\n        /* \"#utility.yul\":4490:4491   */\n      0x00\n        /* \"#utility.yul\":4481:4487   */\n      dup4\n        /* \"#utility.yul\":4476:4479   */\n      dup4\n        /* \"#utility.yul\":4472:4488   */\n      add\n        /* \"#utility.yul\":4465:4492   */\n      mstore\n        /* \"#utility.yul\":4344:4498   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4504:4811   */\n    tag_112:\n        /* \"#utility.yul\":4572:4573   */\n      0x00\n        /* \"#utility.yul\":4582:4695   */\n    tag_151:\n        /* \"#utility.yul\":4596:4602   */\n      dup4\n        /* \"#utility.yul\":4593:4594   */\n      dup2\n        /* \"#utility.yul\":4590:4603   */\n      lt\n        /* \"#utility.yul\":4582:4695   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":4681:4682   */\n      dup1\n        /* \"#utility.yul\":4676:4679   */\n      dup3\n        /* \"#utility.yul\":4672:4683   */\n      add\n        /* \"#utility.yul\":4666:4684   */\n      mload\n        /* \"#utility.yul\":4662:4663   */\n      dup2\n        /* \"#utility.yul\":4657:4660   */\n      dup5\n        /* \"#utility.yul\":4653:4664   */\n      add\n        /* \"#utility.yul\":4646:4685   */\n      mstore\n        /* \"#utility.yul\":4618:4620   */\n      0x20\n        /* \"#utility.yul\":4615:4616   */\n      dup2\n        /* \"#utility.yul\":4611:4621   */\n      add\n        /* \"#utility.yul\":4606:4621   */\n      swap1\n      pop\n        /* \"#utility.yul\":4582:4695   */\n      jump(tag_151)\n    tag_153:\n        /* \"#utility.yul\":4713:4719   */\n      dup4\n        /* \"#utility.yul\":4710:4711   */\n      dup2\n        /* \"#utility.yul\":4707:4720   */\n      gt\n        /* \"#utility.yul\":4704:4805   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4793:4794   */\n      0x00\n        /* \"#utility.yul\":4784:4790   */\n      dup5\n        /* \"#utility.yul\":4779:4782   */\n      dup5\n        /* \"#utility.yul\":4775:4791   */\n      add\n        /* \"#utility.yul\":4768:4795   */\n      mstore\n        /* \"#utility.yul\":4704:4805   */\n    tag_154:\n        /* \"#utility.yul\":4553:4811   */\n      pop\n        /* \"#utility.yul\":4504:4811   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4817:4988   */\n    tag_65:\n        /* \"#utility.yul\":4856:4859   */\n      0x00\n        /* \"#utility.yul\":4879:4903   */\n      tag_156\n        /* \"#utility.yul\":4897:4902   */\n      dup3\n        /* \"#utility.yul\":4879:4903   */\n      tag_138\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4870:4903   */\n      swap2\n      pop\n        /* \"#utility.yul\":4925:4929   */\n      0x00\n        /* \"#utility.yul\":4918:4923   */\n      dup3\n        /* \"#utility.yul\":4915:4930   */\n      eq\n        /* \"#utility.yul\":4912:4953   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":4933:4951   */\n      tag_158\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4912:4953   */\n    tag_157:\n        /* \"#utility.yul\":4980:4981   */\n      0x01\n        /* \"#utility.yul\":4973:4978   */\n      dup3\n        /* \"#utility.yul\":4969:4982   */\n      sub\n        /* \"#utility.yul\":4962:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4817:4988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5314   */\n    tag_19:\n        /* \"#utility.yul\":5038:5044   */\n      0x00\n        /* \"#utility.yul\":5075:5076   */\n      0x02\n        /* \"#utility.yul\":5069:5073   */\n      dup3\n        /* \"#utility.yul\":5065:5077   */\n      div\n        /* \"#utility.yul\":5055:5077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5122:5123   */\n      0x01\n        /* \"#utility.yul\":5116:5120   */\n      dup3\n        /* \"#utility.yul\":5112:5124   */\n      and\n        /* \"#utility.yul\":5143:5161   */\n      dup1\n        /* \"#utility.yul\":5133:5214   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":5199:5203   */\n      0x7f\n        /* \"#utility.yul\":5191:5197   */\n      dup3\n        /* \"#utility.yul\":5187:5204   */\n      and\n        /* \"#utility.yul\":5177:5204   */\n      swap2\n      pop\n        /* \"#utility.yul\":5133:5214   */\n    tag_160:\n        /* \"#utility.yul\":5261:5263   */\n      0x20\n        /* \"#utility.yul\":5253:5259   */\n      dup3\n        /* \"#utility.yul\":5250:5264   */\n      lt\n        /* \"#utility.yul\":5230:5248   */\n      dup2\n        /* \"#utility.yul\":5227:5265   */\n      eq\n        /* \"#utility.yul\":5224:5308   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":5280:5298   */\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5224:5308   */\n    tag_161:\n        /* \"#utility.yul\":5045:5314   */\n      pop\n        /* \"#utility.yul\":4994:5314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5320:5601   */\n    tag_128:\n        /* \"#utility.yul\":5403:5430   */\n      tag_165\n        /* \"#utility.yul\":5425:5429   */\n      dup3\n        /* \"#utility.yul\":5403:5430   */\n      tag_114\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5395:5401   */\n      dup2\n        /* \"#utility.yul\":5391:5431   */\n      add\n        /* \"#utility.yul\":5533:5539   */\n      dup2\n        /* \"#utility.yul\":5521:5531   */\n      dup2\n        /* \"#utility.yul\":5518:5540   */\n      lt\n        /* \"#utility.yul\":5497:5515   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5485:5495   */\n      dup3\n        /* \"#utility.yul\":5482:5516   */\n      gt\n        /* \"#utility.yul\":5479:5541   */\n      or\n        /* \"#utility.yul\":5476:5564   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":5544:5562   */\n      tag_167\n      tag_48\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5476:5564   */\n    tag_166:\n        /* \"#utility.yul\":5584:5594   */\n      dup1\n        /* \"#utility.yul\":5580:5582   */\n      0x40\n        /* \"#utility.yul\":5573:5595   */\n      mstore\n        /* \"#utility.yul\":5363:5601   */\n      pop\n        /* \"#utility.yul\":5320:5601   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5607:5787   */\n    tag_142:\n        /* \"#utility.yul\":5655:5732   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5652:5653   */\n      0x00\n        /* \"#utility.yul\":5645:5733   */\n      mstore\n        /* \"#utility.yul\":5752:5756   */\n      0x11\n        /* \"#utility.yul\":5749:5750   */\n      0x04\n        /* \"#utility.yul\":5742:5757   */\n      mstore\n        /* \"#utility.yul\":5776:5780   */\n      0x24\n        /* \"#utility.yul\":5773:5774   */\n      0x00\n        /* \"#utility.yul\":5766:5781   */\n      revert\n        /* \"#utility.yul\":5793:5973   */\n    tag_163:\n        /* \"#utility.yul\":5841:5918   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5838:5839   */\n      0x00\n        /* \"#utility.yul\":5831:5919   */\n      mstore\n        /* \"#utility.yul\":5938:5942   */\n      0x22\n        /* \"#utility.yul\":5935:5936   */\n      0x04\n        /* \"#utility.yul\":5928:5943   */\n      mstore\n        /* \"#utility.yul\":5962:5966   */\n      0x24\n        /* \"#utility.yul\":5959:5960   */\n      0x00\n        /* \"#utility.yul\":5952:5967   */\n      revert\n        /* \"#utility.yul\":5979:6159   */\n    tag_52:\n        /* \"#utility.yul\":6027:6104   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6024:6025   */\n      0x00\n        /* \"#utility.yul\":6017:6105   */\n      mstore\n        /* \"#utility.yul\":6124:6128   */\n      0x32\n        /* \"#utility.yul\":6121:6122   */\n      0x04\n        /* \"#utility.yul\":6114:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x24\n        /* \"#utility.yul\":6145:6146   */\n      0x00\n        /* \"#utility.yul\":6138:6153   */\n      revert\n        /* \"#utility.yul\":6165:6345   */\n    tag_48:\n        /* \"#utility.yul\":6213:6290   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6210:6211   */\n      0x00\n        /* \"#utility.yul\":6203:6291   */\n      mstore\n        /* \"#utility.yul\":6310:6314   */\n      0x41\n        /* \"#utility.yul\":6307:6308   */\n      0x04\n        /* \"#utility.yul\":6300:6315   */\n      mstore\n        /* \"#utility.yul\":6334:6338   */\n      0x24\n        /* \"#utility.yul\":6331:6332   */\n      0x00\n        /* \"#utility.yul\":6324:6339   */\n      revert\n        /* \"#utility.yul\":6351:6468   */\n    tag_95:\n        /* \"#utility.yul\":6460:6461   */\n      0x00\n        /* \"#utility.yul\":6457:6458   */\n      dup1\n        /* \"#utility.yul\":6450:6462   */\n      revert\n        /* \"#utility.yul\":6474:6591   */\n    tag_88:\n        /* \"#utility.yul\":6583:6584   */\n      0x00\n        /* \"#utility.yul\":6580:6581   */\n      dup1\n        /* \"#utility.yul\":6573:6585   */\n      revert\n        /* \"#utility.yul\":6597:6714   */\n    tag_103:\n        /* \"#utility.yul\":6706:6707   */\n      0x00\n        /* \"#utility.yul\":6703:6704   */\n      dup1\n        /* \"#utility.yul\":6696:6708   */\n      revert\n        /* \"#utility.yul\":6720:6837   */\n    tag_100:\n        /* \"#utility.yul\":6829:6830   */\n      0x00\n        /* \"#utility.yul\":6826:6827   */\n      dup1\n        /* \"#utility.yul\":6819:6831   */\n      revert\n        /* \"#utility.yul\":6843:6945   */\n    tag_114:\n        /* \"#utility.yul\":6884:6890   */\n      0x00\n        /* \"#utility.yul\":6935:6937   */\n      0x1f\n        /* \"#utility.yul\":6931:6938   */\n      not\n        /* \"#utility.yul\":6926:6928   */\n      0x1f\n        /* \"#utility.yul\":6919:6924   */\n      dup4\n        /* \"#utility.yul\":6915:6929   */\n      add\n        /* \"#utility.yul\":6911:6939   */\n      and\n        /* \"#utility.yul\":6901:6939   */\n      swap1\n      pop\n        /* \"#utility.yul\":6843:6945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6951:7133   */\n    tag_119:\n        /* \"#utility.yul\":7091:7125   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":7087:7088   */\n      0x00\n        /* \"#utility.yul\":7079:7085   */\n      dup3\n        /* \"#utility.yul\":7075:7089   */\n      add\n        /* \"#utility.yul\":7068:7126   */\n      mstore\n        /* \"#utility.yul\":6951:7133   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc23077dddf8ca386ba2e9387405c4ea8f2cc9f7be9576ddb3b48f21507326b064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"extract_byte_array_length": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:516:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "68:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "82:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "88:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "78:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "68:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "99:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "129:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "103:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "176:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "190:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "204:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "212:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "200:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "200:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "156:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "149:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "149:26:4"
															},
															"nodeType": "YulIf",
															"src": "146:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "293:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "243:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "274:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "263:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "263:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "240:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:38:4"
															},
															"nodeType": "YulIf",
															"src": "237:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "42:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "51:6:4",
														"type": ""
													}
												],
												"src": "7:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "378:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "381:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "371:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "371:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "468:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "468:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "492:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "333:180:4"
											}
										]
									},
									"contents": "{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600581526020017f48656c6c6f0000000000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610068565b506104d260015534801561006257600080fd5b5061016c565b8280546100749061010b565b90600052602060002090601f01602090048101928261009657600085556100dd565b82601f106100af57805160ff19168380011785556100dd565b828001600101855582156100dd579182015b828111156100dc5782518255916020019190600101906100c1565b5b5090506100ea91906100ee565b5090565b5b808211156101075760008160009055506001016100ef565b5090565b6000600282049050600182168061012357607f821691505b602082108114156101375761013661013d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6109818061017b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806393ebbd9214610046578063bd1b853114610064578063bfc6606614610082575b600080fd5b61004e61009e565b60405161005b9190610604565b60405180910390f35b61006c610130565b6040516100799190610604565b60405180910390f35b61009c6004803603810190610097919061055f565b610148565b005b6060600080546100ad906107de565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906107de565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b6060600061013f600154610162565b90508091505090565b806000908051906020019061015e92919061044c565b5050565b606061017982600161017385610180565b01610210565b9050919050565b600080600090506000608084901c11156101a257608083901c92506010810190505b6000604084901c11156101bd57604083901c92506008810190505b6000602084901c11156101d857602083901c92506004810190505b6000601084901c11156101f357601083901c92506002810190505b6000600884901c1115610207576001810190505b80915050919050565b606060006002836002610223919061070e565b61022d91906106b8565b67ffffffffffffffff811115610246576102456108ce565b5b6040519080825280601f01601f1916602001820160405280156102785781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106102b0576102af61089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106103145761031361089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610354919061070e565b61035e91906106b8565b90505b60018111156103fe577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106103a05761039f61089f565b5b1a60f81b8282815181106103b7576103b661089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806103f7906107b4565b9050610361565b5060008414610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990610626565b60405180910390fd5b8091505092915050565b828054610458906107de565b90600052602060002090601f01602090048101928261047a57600085556104c1565b82601f1061049357805160ff19168380011785556104c1565b828001600101855582156104c1579182015b828111156104c05782518255916020019190600101906104a5565b5b5090506104ce91906104d2565b5090565b5b808211156104eb5760008160009055506001016104d3565b5090565b60006105026104fd8461066b565b610646565b90508281526020810184848401111561051e5761051d610902565b5b610529848285610772565b509392505050565b600082601f830112610546576105456108fd565b5b81356105568482602086016104ef565b91505092915050565b6000602082840312156105755761057461090c565b5b600082013567ffffffffffffffff81111561059357610592610907565b5b61059f84828501610531565b91505092915050565b60006105b38261069c565b6105bd81856106a7565b93506105cd818560208601610781565b6105d681610911565b840191505092915050565b60006105ee6020836106a7565b91506105f982610922565b602082019050919050565b6000602082019050818103600083015261061e81846105a8565b905092915050565b6000602082019050818103600083015261063f816105e1565b9050919050565b6000610650610661565b905061065c8282610810565b919050565b6000604051905090565b600067ffffffffffffffff821115610686576106856108ce565b5b61068f82610911565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106c382610768565b91506106ce83610768565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561070357610702610841565b5b828201905092915050565b600061071982610768565b915061072483610768565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561075d5761075c610841565b5b828202905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561079f578082015181840152602081019050610784565b838111156107ae576000848401525b50505050565b60006107bf82610768565b915060008214156107d3576107d2610841565b5b600182039050919050565b600060028204905060018216806107f657607f821691505b6020821081141561080a57610809610870565b5b50919050565b61081982610911565b810181811067ffffffffffffffff82111715610838576108376108ce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e7460008201525056fea2646970667358221220bc23077dddf8ca386ba2e9387405c4ea8f2cc9f7be9576ddb3b48f21507326b064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4F SWAP3 SWAP2 SWAP1 PUSH2 0x68 JUMP JUMPDEST POP PUSH2 0x4D2 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x74 SWAP1 PUSH2 0x10B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x96 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xDD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xAF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xDD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xDD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x123 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x137 JUMPI PUSH2 0x136 PUSH2 0x13D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x981 DUP1 PUSH2 0x17B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93EBBD92 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBD1B8531 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFC66066 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAD SWAP1 PUSH2 0x7DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD9 SWAP1 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x126 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x126 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13F PUSH1 0x1 SLOAD PUSH2 0x162 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x15E SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x179 DUP3 PUSH1 0x1 PUSH2 0x173 DUP6 PUSH2 0x180 JUMP JUMPDEST ADD PUSH2 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1BD JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x207 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x278 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x89F JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x3F7 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x361 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x439 SWAP1 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x47A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4C1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x493 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4C1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4C1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4A5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502 PUSH2 0x4FD DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x902 JUMP JUMPDEST JUMPDEST PUSH2 0x529 DUP5 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x8FD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x556 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x575 JUMPI PUSH2 0x574 PUSH2 0x90C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x907 JUMP JUMPDEST JUMPDEST PUSH2 0x59F DUP5 DUP3 DUP6 ADD PUSH2 0x531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x5BD DUP2 DUP6 PUSH2 0x6A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x5CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x781 JUMP JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH1 0x20 DUP4 PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5F9 DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x61E DUP2 DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63F DUP2 PUSH2 0x5E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP PUSH2 0x65C DUP3 DUP3 PUSH2 0x810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x686 JUMPI PUSH2 0x685 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST PUSH2 0x68F DUP3 PUSH2 0x911 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH2 0x6CE DUP4 PUSH2 0x768 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0x841 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH2 0x724 DUP4 PUSH2 0x768 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x75D JUMPI PUSH2 0x75C PUSH2 0x841 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x79F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x784 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x7D2 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x870 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x819 DUP3 PUSH2 0x911 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0x23 SMOD PUSH30 0xDDF8CA386BA2E9387405C4EA8F2CC9F7BE9576DDB3B48F21507326B06473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "170:820:0:-:0;;;195:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;243:4;226:21;;170:820;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:4:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;170:820:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@log256_1097": {
									"entryPoint": 384,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_149": {
									"entryPoint": 354,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_225": {
									"entryPoint": 528,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_41": {
									"entryPoint": 304,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@view_get_func_16": {
									"entryPoint": 158,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@view_set_func_26": {
									"entryPoint": 328,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7136:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:328:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "282:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:4"
															},
															"nodeType": "YulIf",
															"src": "251:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "401:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "372:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "372:41:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:4",
														"type": ""
													}
												],
												"src": "7:412:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:278:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "550:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "552:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "552:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "552:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "529:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "537:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "525:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "525:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "544:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "521:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "521:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:35:4"
															},
															"nodeType": "YulIf",
															"src": "511:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "642:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "669:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "656:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "646:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "685:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "746:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "754:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "761:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "769:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "694:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "685:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "479:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "487:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "495:5:4",
														"type": ""
													}
												],
												"src": "439:340:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "861:433:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "907:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "909:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "909:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "909:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "882:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "891:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "878:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:32:4"
															},
															"nodeType": "YulIf",
															"src": "871:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1000:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1015:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1046:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1057:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1042:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1042:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1029:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1029:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1019:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1107:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1109:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1109:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1109:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1079:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1087:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1076:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1076:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1073:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1204:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1249:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1260:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1245:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1245:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1269:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1214:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1204:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "831:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "842:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "854:6:4",
														"type": ""
													}
												],
												"src": "785:509:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1402:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1449:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1416:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1406:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1464:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1530:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1535:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1471:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1464:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1577:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1584:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1591:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1551:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1551:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1551:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1612:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1623:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1650:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1628:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1612:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1373:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1380:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1388:3:4",
														"type": ""
													}
												],
												"src": "1300:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1816:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1826:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1892:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1833:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1998:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "1909:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2011:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2022:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2018:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1804:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1812:3:4",
														"type": ""
													}
												],
												"src": "1670:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2160:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2170:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2182:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2178:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2178:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2170:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2217:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2228:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2213:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2213:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2236:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2262:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2334:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2343:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2270:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2270:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2262:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2132:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2155:4:4",
														"type": ""
													}
												],
												"src": "2042:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2532:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2542:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2554:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2542:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2589:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2600:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2608:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2614:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2578:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2768:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2642:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2634:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2512:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2527:4:4",
														"type": ""
													}
												],
												"src": "2361:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2827:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2837:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2847:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2847:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2896:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2904:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2876:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2811:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2820:6:4",
														"type": ""
													}
												],
												"src": "2786:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2961:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2971:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2987:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2981:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2971:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2954:6:4",
														"type": ""
													}
												],
												"src": "2921:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3069:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3174:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3176:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3176:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3176:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3146:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3143:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:30:4"
															},
															"nodeType": "YulIf",
															"src": "3140:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3206:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3236:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3214:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3206:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3280:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3292:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3288:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3280:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3053:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3064:4:4",
														"type": ""
													}
												],
												"src": "3002:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3375:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3386:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3402:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3396:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3358:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3368:6:4",
														"type": ""
													}
												],
												"src": "3316:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3534:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3539:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3555:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3574:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3570:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3555:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3489:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3494:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3505:11:4",
														"type": ""
													}
												],
												"src": "3421:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3640:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3650:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3673:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3655:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3650:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3684:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3707:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3689:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3684:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3847:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3849:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3849:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3849:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3768:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3843:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3771:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3771:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:81:4"
															},
															"nodeType": "YulIf",
															"src": "3762:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3879:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3890:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3893:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3627:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3630:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3636:3:4",
														"type": ""
													}
												],
												"src": "3596:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3955:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3965:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3988:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3970:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3965:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3999:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4022:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4004:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3999:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4197:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4199:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4199:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4199:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4109:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4102:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4102:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4095:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4117:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4124:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4192:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4120:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4120:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4114:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4114:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:105:4"
															},
															"nodeType": "YulIf",
															"src": "4088:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4244:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4247:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4229:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3938:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3941:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3947:7:4",
														"type": ""
													}
												],
												"src": "3907:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4306:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4316:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4327:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4316:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4288:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4298:7:4",
														"type": ""
													}
												],
												"src": "4261:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:103:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4423:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4405:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4405:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4476:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4481:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4377:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4382:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4387:6:4",
														"type": ""
													}
												],
												"src": "4344:154:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4553:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4563:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4572:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4567:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4632:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4657:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4662:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4653:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4653:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4676:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4681:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4672:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4672:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4666:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4666:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4593:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4596:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4590:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4604:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4606:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4615:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4618:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4611:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4611:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4606:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4586:3:4",
																"statements": []
															},
															"src": "4582:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4729:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4779:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4784:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4775:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4775:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4793:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4768:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4768:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4768:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4710:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4713:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4707:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:13:4"
															},
															"nodeType": "YulIf",
															"src": "4704:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4535:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4540:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4545:6:4",
														"type": ""
													}
												],
												"src": "4504:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:128:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4870:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4897:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4879:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4870:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4931:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4933:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4933:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4933:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4918:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4925:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4915:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:15:4"
															},
															"nodeType": "YulIf",
															"src": "4912:41:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4962:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4973:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4962:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4846:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4856:3:4",
														"type": ""
													}
												],
												"src": "4817:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5045:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5055:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5069:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5086:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5116:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5090:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5163:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5177:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5191:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5199:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5187:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5187:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5177:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5143:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:26:4"
															},
															"nodeType": "YulIf",
															"src": "5133:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "5280:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5280:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5280:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5230:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5253:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5261:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5250:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5227:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:38:4"
															},
															"nodeType": "YulIf",
															"src": "5224:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5029:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5038:6:4",
														"type": ""
													}
												],
												"src": "4994:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5363:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5373:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5425:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5403:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5403:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5391:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5377:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5542:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5544:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5544:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5544:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5485:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5497:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5482:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5482:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5521:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5533:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5518:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5479:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:62:4"
															},
															"nodeType": "YulIf",
															"src": "5476:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5580:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5584:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5349:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5357:4:4",
														"type": ""
													}
												],
												"src": "5320:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5635:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5652:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5645:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5752:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5742:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5742:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5773:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5776:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5766:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5766:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5607:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5821:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5838:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5831:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5952:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5793:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6007:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6027:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6017:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6017:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6121:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6124:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6114:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5979:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6193:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6203:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6203:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6307:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6310:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6331:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6324:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6324:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6165:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6457:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6450:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6351:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6563:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6583:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6573:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6474:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6686:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6703:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6706:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6696:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6696:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6597:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6809:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6829:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6819:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6720:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6891:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6901:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6919:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6926:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6915:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6935:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6931:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6911:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6874:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6884:6:4",
														"type": ""
													}
												],
												"src": "6843:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7057:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7079:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7087:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7075:14:4"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7091:34:4",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7068:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7068:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7049:6:4",
														"type": ""
													}
												],
												"src": "6951:182:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806393ebbd9214610046578063bd1b853114610064578063bfc6606614610082575b600080fd5b61004e61009e565b60405161005b9190610604565b60405180910390f35b61006c610130565b6040516100799190610604565b60405180910390f35b61009c6004803603810190610097919061055f565b610148565b005b6060600080546100ad906107de565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906107de565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b6060600061013f600154610162565b90508091505090565b806000908051906020019061015e92919061044c565b5050565b606061017982600161017385610180565b01610210565b9050919050565b600080600090506000608084901c11156101a257608083901c92506010810190505b6000604084901c11156101bd57604083901c92506008810190505b6000602084901c11156101d857602083901c92506004810190505b6000601084901c11156101f357601083901c92506002810190505b6000600884901c1115610207576001810190505b80915050919050565b606060006002836002610223919061070e565b61022d91906106b8565b67ffffffffffffffff811115610246576102456108ce565b5b6040519080825280601f01601f1916602001820160405280156102785781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106102b0576102af61089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106103145761031361089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610354919061070e565b61035e91906106b8565b90505b60018111156103fe577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106103a05761039f61089f565b5b1a60f81b8282815181106103b7576103b661089f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806103f7906107b4565b9050610361565b5060008414610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990610626565b60405180910390fd5b8091505092915050565b828054610458906107de565b90600052602060002090601f01602090048101928261047a57600085556104c1565b82601f1061049357805160ff19168380011785556104c1565b828001600101855582156104c1579182015b828111156104c05782518255916020019190600101906104a5565b5b5090506104ce91906104d2565b5090565b5b808211156104eb5760008160009055506001016104d3565b5090565b60006105026104fd8461066b565b610646565b90508281526020810184848401111561051e5761051d610902565b5b610529848285610772565b509392505050565b600082601f830112610546576105456108fd565b5b81356105568482602086016104ef565b91505092915050565b6000602082840312156105755761057461090c565b5b600082013567ffffffffffffffff81111561059357610592610907565b5b61059f84828501610531565b91505092915050565b60006105b38261069c565b6105bd81856106a7565b93506105cd818560208601610781565b6105d681610911565b840191505092915050565b60006105ee6020836106a7565b91506105f982610922565b602082019050919050565b6000602082019050818103600083015261061e81846105a8565b905092915050565b6000602082019050818103600083015261063f816105e1565b9050919050565b6000610650610661565b905061065c8282610810565b919050565b6000604051905090565b600067ffffffffffffffff821115610686576106856108ce565b5b61068f82610911565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106c382610768565b91506106ce83610768565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561070357610702610841565b5b828201905092915050565b600061071982610768565b915061072483610768565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561075d5761075c610841565b5b828202905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561079f578082015181840152602081019050610784565b838111156107ae576000848401525b50505050565b60006107bf82610768565b915060008214156107d3576107d2610841565b5b600182039050919050565b600060028204905060018216806107f657607f821691505b6020821081141561080a57610809610870565b5b50919050565b61081982610911565b810181811067ffffffffffffffff82111715610838576108376108ce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e7460008201525056fea2646970667358221220bc23077dddf8ca386ba2e9387405c4ea8f2cc9f7be9576ddb3b48f21507326b064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93EBBD92 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBD1B8531 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xBFC66066 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAD SWAP1 PUSH2 0x7DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD9 SWAP1 PUSH2 0x7DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x126 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x126 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13F PUSH1 0x1 SLOAD PUSH2 0x162 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x15E SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x179 DUP3 PUSH1 0x1 PUSH2 0x173 DUP6 PUSH2 0x180 JUMP JUMPDEST ADD PUSH2 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1BD JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x207 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x278 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x89F JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x89F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x3F7 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x361 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x439 SWAP1 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x47A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4C1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x493 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4C1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4C1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4A5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x4D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502 PUSH2 0x4FD DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x902 JUMP JUMPDEST JUMPDEST PUSH2 0x529 DUP5 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x8FD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x556 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x575 JUMPI PUSH2 0x574 PUSH2 0x90C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x907 JUMP JUMPDEST JUMPDEST PUSH2 0x59F DUP5 DUP3 DUP6 ADD PUSH2 0x531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x5BD DUP2 DUP6 PUSH2 0x6A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x5CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x781 JUMP JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH1 0x20 DUP4 PUSH2 0x6A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5F9 DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x61E DUP2 DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63F DUP2 PUSH2 0x5E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP PUSH2 0x65C DUP3 DUP3 PUSH2 0x810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x686 JUMPI PUSH2 0x685 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST PUSH2 0x68F DUP3 PUSH2 0x911 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH2 0x6CE DUP4 PUSH2 0x768 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0x841 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH2 0x724 DUP4 PUSH2 0x768 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x75D JUMPI PUSH2 0x75C PUSH2 0x841 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x79F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x784 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF DUP3 PUSH2 0x768 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x7D2 PUSH2 0x841 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x870 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x819 DUP3 PUSH2 0x911 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x8CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0x23 SMOD PUSH30 0xDDF8CA386BA2E9387405C4EA8F2CC9F7BE9576DDB3B48F21507326B06473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "170:820:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;835:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;386:92;432:13;465:5;458:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:92;:::o;835:152::-;879:13;905:20;928:27;948:6;;928:19;:27::i;:::-;905:50;;973:6;966:13;;;835:152;:::o;742:85::-;813:6;805:5;:14;;;;;;;;;;;;:::i;:::-;;742:85;:::o;1521:174:1:-;1580:13;1636:42;1648:5;1676:1;1655:18;1667:5;1655:11;:18::i;:::-;:22;1636:11;:42::i;:::-;1629:49;;1521:174;;;:::o;11415:663:2:-;11469:7;11488:14;11505:1;11488:18;;11559:1;11553:3;11544:5;:12;;:16;11540:98;;;11590:3;11580:13;;;;;11621:2;11611:12;;;;11540:98;11669:1;11664:2;11655:5;:11;;:15;11651:95;;;11700:2;11690:12;;;;;11730:1;11720:11;;;;11651:95;11777:1;11772:2;11763:5;:11;;:15;11759:95;;;11808:2;11798:12;;;;;11838:1;11828:11;;;;11759:95;11885:1;11880:2;11871:5;:11;;:15;11867:95;;;11916:2;11906:12;;;;;11946:1;11936:11;;;;11867:95;11992:1;11988;11979:5;:10;;:14;11975:64;;;12023:1;12013:11;;;;11975:64;12065:6;12058:13;;;11415:663;;;:::o;1818:437:1:-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:4:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;439:340::-;495:5;544:3;537:4;529:6;525:17;521:27;511:122;;552:79;;:::i;:::-;511:122;669:6;656:20;694:79;769:3;761:6;754:4;746:6;742:17;694:79;:::i;:::-;685:88;;501:278;439:340;;;;:::o;785:509::-;854:6;903:2;891:9;882:7;878:23;874:32;871:119;;;909:79;;:::i;:::-;871:119;1057:1;1046:9;1042:17;1029:31;1087:18;1079:6;1076:30;1073:117;;;1109:79;;:::i;:::-;1073:117;1214:63;1269:7;1260:6;1249:9;1245:22;1214:63;:::i;:::-;1204:73;;1000:287;785:509;;;;:::o;1300:364::-;1388:3;1416:39;1449:5;1416:39;:::i;:::-;1471:71;1535:6;1530:3;1471:71;:::i;:::-;1464:78;;1551:52;1596:6;1591:3;1584:4;1577:5;1573:16;1551:52;:::i;:::-;1628:29;1650:6;1628:29;:::i;:::-;1623:3;1619:39;1612:46;;1392:272;1300:364;;;;:::o;1670:366::-;1812:3;1833:67;1897:2;1892:3;1833:67;:::i;:::-;1826:74;;1909:93;1998:3;1909:93;:::i;:::-;2027:2;2022:3;2018:12;2011:19;;1670:366;;;:::o;2042:313::-;2155:4;2193:2;2182:9;2178:18;2170:26;;2242:9;2236:4;2232:20;2228:1;2217:9;2213:17;2206:47;2270:78;2343:4;2334:6;2270:78;:::i;:::-;2262:86;;2042:313;;;;:::o;2361:419::-;2527:4;2565:2;2554:9;2550:18;2542:26;;2614:9;2608:4;2604:20;2600:1;2589:9;2585:17;2578:47;2642:131;2768:4;2642:131;:::i;:::-;2634:139;;2361:419;;;:::o;2786:129::-;2820:6;2847:20;;:::i;:::-;2837:30;;2876:33;2904:4;2896:6;2876:33;:::i;:::-;2786:129;;;:::o;2921:75::-;2954:6;2987:2;2981:9;2971:19;;2921:75;:::o;3002:308::-;3064:4;3154:18;3146:6;3143:30;3140:56;;;3176:18;;:::i;:::-;3140:56;3214:29;3236:6;3214:29;:::i;:::-;3206:37;;3298:4;3292;3288:15;3280:23;;3002:308;;;:::o;3316:99::-;3368:6;3402:5;3396:12;3386:22;;3316:99;;;:::o;3421:169::-;3505:11;3539:6;3534:3;3527:19;3579:4;3574:3;3570:14;3555:29;;3421:169;;;;:::o;3596:305::-;3636:3;3655:20;3673:1;3655:20;:::i;:::-;3650:25;;3689:20;3707:1;3689:20;:::i;:::-;3684:25;;3843:1;3775:66;3771:74;3768:1;3765:81;3762:107;;;3849:18;;:::i;:::-;3762:107;3893:1;3890;3886:9;3879:16;;3596:305;;;;:::o;3907:348::-;3947:7;3970:20;3988:1;3970:20;:::i;:::-;3965:25;;4004:20;4022:1;4004:20;:::i;:::-;3999:25;;4192:1;4124:66;4120:74;4117:1;4114:81;4109:1;4102:9;4095:17;4091:105;4088:131;;;4199:18;;:::i;:::-;4088:131;4247:1;4244;4240:9;4229:20;;3907:348;;;;:::o;4261:77::-;4298:7;4327:5;4316:16;;4261:77;;;:::o;4344:154::-;4428:6;4423:3;4418;4405:30;4490:1;4481:6;4476:3;4472:16;4465:27;4344:154;;;:::o;4504:307::-;4572:1;4582:113;4596:6;4593:1;4590:13;4582:113;;;4681:1;4676:3;4672:11;4666:18;4662:1;4657:3;4653:11;4646:39;4618:2;4615:1;4611:10;4606:15;;4582:113;;;4713:6;4710:1;4707:13;4704:101;;;4793:1;4784:6;4779:3;4775:16;4768:27;4704:101;4553:258;4504:307;;;:::o;4817:171::-;4856:3;4879:24;4897:5;4879:24;:::i;:::-;4870:33;;4925:4;4918:5;4915:15;4912:41;;;4933:18;;:::i;:::-;4912:41;4980:1;4973:5;4969:13;4962:20;;4817:171;;;:::o;4994:320::-;5038:6;5075:1;5069:4;5065:12;5055:22;;5122:1;5116:4;5112:12;5143:18;5133:81;;5199:4;5191:6;5187:17;5177:27;;5133:81;5261:2;5253:6;5250:14;5230:18;5227:38;5224:84;;;5280:18;;:::i;:::-;5224:84;5045:269;4994:320;;;:::o;5320:281::-;5403:27;5425:4;5403:27;:::i;:::-;5395:6;5391:40;5533:6;5521:10;5518:22;5497:18;5485:10;5482:34;5479:62;5476:88;;;5544:18;;:::i;:::-;5476:88;5584:10;5580:2;5573:22;5363:238;5320:281;;:::o;5607:180::-;5655:77;5652:1;5645:88;5752:4;5749:1;5742:15;5776:4;5773:1;5766:15;5793:180;5841:77;5838:1;5831:88;5938:4;5935:1;5928:15;5962:4;5959:1;5952:15;5979:180;6027:77;6024:1;6017:88;6124:4;6121:1;6114:15;6148:4;6145:1;6138:15;6165:180;6213:77;6210:1;6203:88;6310:4;6307:1;6300:15;6334:4;6331:1;6324:15;6351:117;6460:1;6457;6450:12;6474:117;6583:1;6580;6573:12;6597:117;6706:1;6703;6696:12;6720:117;6829:1;6826;6819:12;6843:102;6884:6;6935:2;6931:7;6926:2;6919:5;6915:14;6911:28;6901:38;;6843:102;;;:::o;6951:182::-;7091:34;7087:1;7079:6;7075:14;7068:58;6951:182;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "486600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"toHexString()": "infinite",
								"view_get_func()": "infinite",
								"view_set_func(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "48656C6C6F000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 195,
									"end": 217,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 243,
									"end": 247,
									"name": "PUSH",
									"source": 0,
									"value": "4D2"
								},
								{
									"begin": 226,
									"end": 247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 226,
									"end": 247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 327,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 327,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 51,
									"end": 57,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 89,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 82,
									"end": 86,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 78,
									"end": 90,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 68,
									"end": 90,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 68,
									"end": 90,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 133,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 125,
									"end": 137,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 156,
									"end": 174,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 227,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 212,
									"end": 216,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 204,
									"end": 210,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 200,
									"end": 217,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 190,
									"end": 217,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 190,
									"end": 217,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 227,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 227,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 274,
									"end": 276,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 266,
									"end": 272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 263,
									"end": 277,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 243,
									"end": 261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 240,
									"end": 278,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 237,
									"end": 321,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 237,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 237,
									"end": 321,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 237,
									"end": 321,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 237,
									"end": 321,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 58,
									"end": 327,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 327,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 327,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 327,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 327,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 513,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 333,
									"end": 513,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 381,
									"end": 458,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 379,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 459,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 482,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 475,
									"end": 476,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 468,
									"end": 483,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 502,
									"end": 506,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 499,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 507,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 170,
									"end": 990,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 990,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc23077dddf8ca386ba2e9387405c4ea8f2cc9f7be9576ddb3b48f21507326b064736f6c63430008070033",
									".code": [
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "93EBBD92"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "BD1B8531"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "BFC66066"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 432,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 465,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 879,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 905,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 928,
											"end": 955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 928,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 928,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 905,
											"end": 955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 905,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 987,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 805,
											"end": 819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 805,
											"end": 819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 742,
											"end": 827,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1648,
											"end": 1653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1636,
											"end": 1678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1636,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1695,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11488,
											"end": 11506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11553,
											"end": 11556,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11544,
											"end": 11549,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11556,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11560,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11540,
											"end": 11638,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11540,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11540,
											"end": 11638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11593,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11580,
											"end": 11593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11593,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11593,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11580,
											"end": 11593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11540,
											"end": 11638,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11540,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11669,
											"end": 11670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11664,
											"end": 11666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11655,
											"end": 11660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11655,
											"end": 11666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11655,
											"end": 11666,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11655,
											"end": 11670,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11651,
											"end": 11746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11651,
											"end": 11746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11651,
											"end": 11746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11700,
											"end": 11702,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11730,
											"end": 11731,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11720,
											"end": 11731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11720,
											"end": 11731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11720,
											"end": 11731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11720,
											"end": 11731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11651,
											"end": 11746,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11651,
											"end": 11746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11777,
											"end": 11778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 11774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 11774,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11763,
											"end": 11778,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11759,
											"end": 11854,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11759,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 11759,
											"end": 11854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11808,
											"end": 11810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11798,
											"end": 11810,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11810,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11838,
											"end": 11839,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11828,
											"end": 11839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11759,
											"end": 11854,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 11759,
											"end": 11854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11885,
											"end": 11886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11882,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 11871,
											"end": 11876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11871,
											"end": 11882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11871,
											"end": 11882,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11871,
											"end": 11886,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 11867,
											"end": 11962,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11916,
											"end": 11918,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11946,
											"end": 11947,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11936,
											"end": 11947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11936,
											"end": 11947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11936,
											"end": 11947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11936,
											"end": 11947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11962,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 11867,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11988,
											"end": 11989,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11979,
											"end": 11984,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11979,
											"end": 11989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11979,
											"end": 11989,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 11979,
											"end": 11993,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11975,
											"end": 12039,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11975,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11975,
											"end": 12039,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12013,
											"end": 12024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12013,
											"end": 12024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12013,
											"end": 12024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12013,
											"end": 12024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11975,
											"end": 12039,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11975,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12058,
											"end": 12071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12058,
											"end": 12071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12058,
											"end": 12071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11415,
											"end": 12078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "76"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 251,
											"end": 363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 251,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 251,
											"end": 363,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 401,
											"end": 404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 91,
											"end": 419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 439,
											"end": 779,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 439,
											"end": 779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 537,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 525,
											"end": 542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 521,
											"end": 548,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 511,
											"end": 633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 552,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 552,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 552,
											"end": 631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 631,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 552,
											"end": 631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 511,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 656,
											"end": 676,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 769,
											"end": 772,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 761,
											"end": 767,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 754,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 742,
											"end": 759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 694,
											"end": 773,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 773,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 694,
											"end": 773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 685,
											"end": 773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 685,
											"end": 773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 501,
											"end": 779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 779,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 439,
											"end": 779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 779,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 905,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 882,
											"end": 889,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 871,
											"end": 990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 871,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 871,
											"end": 990,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1060,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1106,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1109,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1109,
											"end": 1188,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1109,
											"end": 1188,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1109,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1214,
											"end": 1277,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1277,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1214,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 785,
											"end": 1294,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1471,
											"end": 1542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1471,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1471,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1542,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1833,
											"end": 1900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1833,
											"end": 1900,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1833,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1998,
											"end": 2001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1909,
											"end": 2002,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1909,
											"end": 2002,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1909,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2030,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 2036,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2170,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2226,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2206,
											"end": 2253,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2343,
											"end": 2347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2270,
											"end": 2348,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2348,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2270,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2355,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2563,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2642,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2768,
											"end": 2772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2642,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2642,
											"end": 2773,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2642,
											"end": 2773,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2642,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2780,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2915,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2921,
											"end": 2996,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2921,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 2990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2996,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3143,
											"end": 3173,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3196,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3196,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3196,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3310,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3537,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3577,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3590,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3673,
											"end": 3674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 3845,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3846,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3762,
											"end": 3869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3869,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3762,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3901,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4004,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4194,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4195,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4219,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4088,
											"end": 4219,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4219,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4088,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4255,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4405,
											"end": 4435,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4487,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4498,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4603,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4660,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4646,
											"end": 4685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4704,
											"end": 4805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4805,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4704,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4811,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4879,
											"end": 4903,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4879,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4953,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4912,
											"end": 4953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4953,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4912,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 4982,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4988,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5038,
											"end": 5044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5077,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5133,
											"end": 5214,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 5191,
											"end": 5197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5214,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5133,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5264,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5265,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5308,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5224,
											"end": 5308,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5308,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5224,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5314,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5320,
											"end": 5601,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5320,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5425,
											"end": 5429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5403,
											"end": 5430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5430,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5403,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5391,
											"end": 5431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5540,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5479,
											"end": 5541,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5564,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5476,
											"end": 5564,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5564,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5476,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5601,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5607,
											"end": 5787,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5607,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5655,
											"end": 5732,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5773,
											"end": 5774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5781,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5973,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5793,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5841,
											"end": 5918,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5838,
											"end": 5839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5942,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5928,
											"end": 5943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6159,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5979,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6104,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6024,
											"end": 6025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6128,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6114,
											"end": 6129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6345,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6165,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6290,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6314,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6300,
											"end": 6315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6334,
											"end": 6338,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6339,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6351,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6460,
											"end": 6461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6591,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6474,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6597,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6597,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6696,
											"end": 6708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6720,
											"end": 6837,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6720,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6884,
											"end": 6890,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6926,
											"end": 6928,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6919,
											"end": 6924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6911,
											"end": 6939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6945,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6951,
											"end": 7133,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6951,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7125,
											"name": "PUSH",
											"source": 4,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 7133,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"toHexString()": "bd1b8531",
							"view_get_func()": "93ebbd92",
							"view_set_func(string)": "bfc66066"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"toHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"view_get_func\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"view_set_func\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ViewPure.sol\":\"ViewPure\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ViewPure.sol\":{\"keccak256\":\"0x05e9431dc03e42bce69ff467d0724e1446f5d4cf24b72d2dde6ef2d15f4cfcc8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://881b9f5015dc4a5f74977294f8b12c433a33e9c945e0e39d41bae7778087c54d\",\"dweb:/ipfs/QmcutXTB1ezz3Fb4pFtvpGEWaoQKpeLo3Nyy2YhxZ93v2T\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/ViewPure.sol:ViewPure",
								"label": "value",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/ViewPure.sol:ViewPure",
								"label": "number",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xFB MULMOD MSTORE8 0x23 DUP6 PUSH7 0x3854073449E0FE 0xD8 PUSH4 0xFB19FECE 0xD6 0x29 0xE9 0xC0 DUP8 PUSH5 0x28CAAE38DE PUSH12 0x64736F6C6343000807003300 ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xFB MULMOD MSTORE8 0x23 DUP6 PUSH7 0x3854073449E0FE 0xD8 PUSH4 0xFB19FECE 0xD6 0x29 0xE9 0xC0 DUP8 PUSH5 0x28CAAE38DE PUSH12 0x64736F6C6343000807003300 ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x4E XOR SSTORE MSTORE8 0x4F 0xE0 0x2D MOD EXTCODEHASH 0xC2 SELFBALANCE 0xE 0xA6 0xC0 SWAP15 0x26 0xCD SELFDESTRUCT PUSH30 0x7664CD5F9EFB23243CEC61E664736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12289:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x4E XOR SSTORE MSTORE8 0x4F 0xE0 0x2D MOD EXTCODEHASH 0xC2 SELFBALANCE 0xE 0xA6 0xC0 SWAP15 0x26 0xCD SELFDESTRUCT PUSH30 0x7664CD5F9EFB23243CEC61E664736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12289:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 BYTE 0xBA 0xBB CODECOPY 0x2C 0xDD AND LOG3 PUSH6 0x1B47D6C25716 SWAP6 0xB9 0x4E SAR ADDMOD SWAP8 CREATE2 0xAE 0xF CALLVALUE 0xB6 0xE3 DUP7 SWAP2 DUP4 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 BYTE 0xBA 0xBB CODECOPY 0x2C 0xDD AND LOG3 PUSH6 0x1B47D6C25716 SWAP6 0xB9 0x4E SAR ADDMOD SWAP8 CREATE2 0xAE 0xF CALLVALUE 0xB6 0xE3 DUP7 SWAP2 DUP4 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ViewPure.sol": {
				"ast": {
					"absolutePath": "contracts/ViewPure.sol",
					"exportedSymbols": {
						"Math": [
							1137
						],
						"SignedMath": [
							1242
						],
						"Strings": [
							271
						],
						"ViewPure": [
							42
						]
					},
					"id": 43,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 43,
							"sourceUnit": 272,
							"src": "62:104:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "ViewPure",
							"nameLocation": "179:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "202:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 42,
									"src": "195:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "195:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "48656c6c6f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_06b3dfaec148fb1bb2b066f10ec285e7c9bf402ab32aa78a5d38e34566810cd2",
											"typeString": "literal_string \"Hello\""
										},
										"value": "Hello"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "number",
									"nameLocation": "234:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 42,
									"src": "226:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31323334",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "243:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1234_by_1",
											"typeString": "int_const 1234"
										},
										"value": "1234"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "447:31:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "465:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 12,
												"id": 14,
												"nodeType": "Return",
												"src": "458:12:0"
											}
										]
									},
									"functionSelector": "93ebbd92",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "view_get_func",
									"nameLocation": "395:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "432:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "432:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:15:0"
									},
									"scope": 42,
									"src": "386:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "794:33:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "805:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "813:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "805:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "805:14:0"
											}
										]
									},
									"functionSelector": "bfc66066",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "view_set_func",
									"nameLocation": "751:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "765:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 17,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:22:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:0:0"
									},
									"scope": 42,
									"src": "742:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "894:93:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "hexStr",
														"nameLocation": "919:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "905:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 31,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"arguments": [
														{
															"id": 35,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "948:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 33,
															"name": "Strings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Strings_$271_$",
																"typeString": "type(library Strings)"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toHexString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "928:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "905:50:0"
											},
											{
												"expression": {
													"id": 38,
													"name": "hexStr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "973:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 30,
												"id": 39,
												"nodeType": "Return",
												"src": "966:13:0"
											}
										]
									},
									"functionSelector": "bd1b8531",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "844:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "879:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:15:0"
									},
									"scope": 42,
									"src": "835:152:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "170:820:0",
							"usedErrors": []
						}
					],
					"src": "37:953:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1137
						],
						"SignedMath": [
							1242
						],
						"Strings": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 45,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 272,
							"sourceUnit": 1138,
							"src": "126:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 46,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 272,
							"sourceUnit": 1243,
							"src": "152:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "Strings",
							"nameLocation": "228:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 50,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "242:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 48,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 53,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "302:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 51,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "518:625:1",
										"statements": [
											{
												"id": 99,
												"nodeType": "UncheckedBlock",
												"src": "528:609:1",
												"statements": [
													{
														"assignments": [
															62
														],
														"declarations": [
															{
																"constant": false,
																"id": 62,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 99,
																"src": "552:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 61,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 69,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 65,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "580:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 63,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1137_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 974,
																	"src": "569:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:1"
													},
													{
														"assignments": [
															71
														],
														"declarations": [
															{
																"constant": false,
																"id": 71,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 99,
																"src": "604:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 70,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 76,
														"initialValue": {
															"arguments": [
																{
																	"id": 74,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "638:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 72,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:1"
													},
													{
														"assignments": [
															78
														],
														"declarations": [
															{
																"constant": false,
																"id": 78,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 99,
																"src": "659:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 77,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 79,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 71,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:1",
																"valueSize": 1
															},
															{
																"declaration": 62,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:1",
																"valueSize": 1
															},
															{
																"declaration": 78,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:1",
																"valueSize": 1
															}
														],
														"id": 80,
														"nodeType": "InlineAssembly",
														"src": "731:76:1"
													},
													{
														"body": {
															"id": 95,
															"nodeType": "Block",
															"src": "833:267:1",
															"statements": [
																{
																	"expression": {
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:1",
																		"subExpression": {
																			"id": 82,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 78,
																			"src": "851:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 84,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:1"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:1"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 50,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 78,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 56,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 85,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:1"
																},
																{
																	"expression": {
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 86,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "1035:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 89,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 90,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "1068:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 91,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 94,
																	"nodeType": "IfStatement",
																	"src": "1064:21:1",
																	"trueBody": {
																		"id": 93,
																		"nodeType": "Break",
																		"src": "1080:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 96,
														"nodeType": "WhileStatement",
														"src": "820:280:1"
													},
													{
														"expression": {
															"id": 97,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1120:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 60,
														"id": 98,
														"nodeType": "Return",
														"src": "1113:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "503:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:1"
									},
									"scope": 271,
									"src": "447:696:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1313:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "1354:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:1",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 122,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 104,
																					"src": "1400:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 120,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "1385:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1242_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1241,
																				"src": "1385:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 119,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			101,
																			129
																		],
																		"referencedDeclaration": 101,
																		"src": "1376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 111,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 109,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 108,
												"id": 127,
												"nodeType": "Return",
												"src": "1323:86:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1261:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1298:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:1"
									},
									"scope": 271,
									"src": "1243:173:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1595:100:1",
										"statements": [
											{
												"id": 147,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 138,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "1648:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 141,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "1667:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 139,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "1655:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1137_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1097,
																			"src": "1655:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 137,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	149,
																	225,
																	245
																],
																"referencedDeclaration": 225,
																"src": "1636:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 136,
														"id": 146,
														"nodeType": "Return",
														"src": "1629:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1580:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:1"
									},
									"scope": 271,
									"src": "1521:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1908:347:1",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 224,
														"src": "1918:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 164,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1954:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:1"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 170,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "1975:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 172,
														"indexExpression": {
															"hexValue": "30",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 176,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 178,
														"indexExpression": {
															"hexValue": "31",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:1"
											},
											{
												"body": {
													"id": 210,
													"nodeType": "Block",
													"src": "2070:83:1",
													"statements": [
														{
															"expression": {
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 196,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "2084:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 198,
																	"indexExpression": {
																		"id": 197,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "2091:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 199,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "2096:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 203,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 200,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "2105:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 205,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:1"
														},
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "2131:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2058:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"initializationExpression": {
													"assignments": [
														183
													],
													"declarations": [
														{
															"constant": false,
															"id": 183,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 211,
															"src": "2030:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 182,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 189,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 185,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "2046:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:1"
												},
												"loopExpression": {
													"expression": {
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:1",
														"subExpression": {
															"id": 193,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2067:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 195,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2170:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 219,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 158,
												"id": 223,
												"nodeType": "Return",
												"src": "2227:21:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1839:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1893:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:1"
									},
									"scope": 271,
									"src": "1818:437:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2480:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "2525:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 234,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 241,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "2533:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 233,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															149,
															225,
															245
														],
														"referencedDeclaration": 225,
														"src": "2497:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 232,
												"id": 243,
												"nodeType": "Return",
												"src": "2490:59:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"scope": 271,
									"src": "2407:149:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2711:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 258,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "2744:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 256,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 255,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 264,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "2767:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 262,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 261,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 254,
												"id": 268,
												"nodeType": "Return",
												"src": "2721:49:1"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2648:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2665:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2705:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:1"
									},
									"scope": 271,
									"src": "2633:144:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 272,
							"src": "220:2559:1",
							"usedErrors": []
						}
					],
					"src": "101:2679:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1137
						]
					},
					"id": 1138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1137,
							"linearizedBaseContracts": [
								1137
							],
							"name": "Math",
							"nameLocation": "210:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 278,
									"members": [
										{
											"id": 275,
											"name": "Down",
											"nameLocation": "245:4:2",
											"nodeType": "EnumValue",
											"src": "245:4:2"
										},
										{
											"id": 276,
											"name": "Up",
											"nameLocation": "287:2:2",
											"nodeType": "EnumValue",
											"src": "287:2:2"
										},
										{
											"id": 277,
											"name": "Zero",
											"nameLocation": "318:4:2",
											"nodeType": "EnumValue",
											"src": "318:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:2",
									"nodeType": "EnumDefinition",
									"src": "221:122:2"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "480:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 289,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "501:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 292,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "509:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:2",
													"trueExpression": {
														"id": 291,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 294,
												"nodeType": "Return",
												"src": "490:20:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "426:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "437:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"scope": 1137,
									"src": "413:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "655:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 306,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "672:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 307,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "676:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 310,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "684:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:2",
													"trueExpression": {
														"id": 309,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 312,
												"nodeType": "Return",
												"src": "665:20:2"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "601:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "612:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:2"
									},
									"scope": 1137,
									"src": "588:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "876:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 324,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 325,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 328,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "941:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 329,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 331,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 335,
												"nodeType": "Return",
												"src": "923:28:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "822:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1137,
									"src": "805:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "1228:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 347,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1316:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 351,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "1330:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "1339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "1309:35:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1174:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:2"
									},
									"scope": 1137,
									"src": "1157:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1765:3822:2",
										"statements": [
											{
												"id": 483,
												"nodeType": "UncheckedBlock",
												"src": "1775:3806:2",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 483,
																"src": "2096:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 376,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:2"
													},
													{
														"assignments": [
															378
														],
														"declarations": [
															{
																"constant": false,
																"id": 378,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 483,
																"src": "2168:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 377,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:2",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:2",
																"valueSize": 1
															},
															{
																"declaration": 365,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:2",
																"valueSize": 1
															},
															{
																"declaration": 365,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:2",
																"valueSize": 1
															},
															{
																"declaration": 367,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:2",
																"valueSize": 1
															},
															{
																"declaration": 367,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:2",
																"valueSize": 1
															}
														],
														"id": 380,
														"nodeType": "InlineAssembly",
														"src": "2239:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "2486:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 389,
														"nodeType": "IfStatement",
														"src": "2482:75:2",
														"trueBody": {
															"id": 388,
															"nodeType": "Block",
															"src": "2498:59:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 384,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 375,
																			"src": "2523:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 385,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2531:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2523:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 373,
																	"id": 387,
																	"nodeType": "Return",
																	"src": "2516:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 391,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "2667:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 392,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2681:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2667:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2688:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 390,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2659:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2659:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 396,
														"nodeType": "ExpressionStatement",
														"src": "2659:53:2"
													},
													{
														"assignments": [
															398
														],
														"declarations": [
															{
																"constant": false,
																"id": 398,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2976:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 483,
																"src": "2968:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 397,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2968:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 399,
														"nodeType": "VariableDeclarationStatement",
														"src": "2968:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3008:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3077:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3097:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3100:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3103:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3090:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3090:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3077:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3197:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3210:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3220:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3231:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3217:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3197:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3255:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3268:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3255:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:11:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "3231:5:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "3255:5:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "3268:5:2",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "3197:5:2",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "3210:5:2",
																"valueSize": 1
															},
															{
																"declaration": 398,
																"isOffset": false,
																"isSlot": false,
																"src": "3077:9:2",
																"valueSize": 1
															},
															{
																"declaration": 398,
																"isOffset": false,
																"isSlot": false,
																"src": "3220:9:2",
																"valueSize": 1
															},
															{
																"declaration": 398,
																"isOffset": false,
																"isSlot": false,
																"src": "3275:9:2",
																"valueSize": 1
															},
															{
																"declaration": 365,
																"isOffset": false,
																"isSlot": false,
																"src": "3097:1:2",
																"valueSize": 1
															},
															{
																"declaration": 367,
																"isOffset": false,
																"isSlot": false,
																"src": "3100:1:2",
																"valueSize": 1
															}
														],
														"id": 400,
														"nodeType": "InlineAssembly",
														"src": "2999:300:2"
													},
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3614:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 483,
																"src": "3606:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3606:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 410,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "3621:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3636:12:2",
																			"subExpression": {
																				"id": 404,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "3637:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3651:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3636:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3635:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3621:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3606:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3676:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3741:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3760:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3773:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3756:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3741:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3845:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3858:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3865:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3845:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3985:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4005:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4008:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4001:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4001:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4015:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3993:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3985:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "3741:11:2",
																"valueSize": 1
															},
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "3760:11:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "3845:5:2",
																"valueSize": 1
															},
															{
																"declaration": 375,
																"isOffset": false,
																"isSlot": false,
																"src": "3858:5:2",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "3773:4:2",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "3865:4:2",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "3985:4:2",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "4008:4:2",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "4015:4:2",
																"valueSize": 1
															}
														],
														"id": 411,
														"nodeType": "InlineAssembly",
														"src": "3667:371:2"
													},
													{
														"expression": {
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 412,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "4104:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 413,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "4113:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 414,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "4121:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4113:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4104:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 417,
														"nodeType": "ExpressionStatement",
														"src": "4104:21:2"
													},
													{
														"assignments": [
															419
														],
														"declarations": [
															{
																"constant": false,
																"id": 419,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4451:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 483,
																"src": "4443:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 418,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4443:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 426,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4462:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 421,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "4466:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4462:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 423,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4461:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4481:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4461:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4443:39:2"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 427,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4699:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4710:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 429,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "4714:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 430,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4728:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4714:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4710:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4699:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "4699:36:2"
													},
													{
														"expression": {
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4768:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4779:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 437,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "4783:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 438,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4797:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4783:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4779:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4768:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 442,
														"nodeType": "ExpressionStatement",
														"src": "4768:36:2"
													},
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 443,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4838:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4849:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 445,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "4853:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 446,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4867:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4853:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4849:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4838:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "4838:36:2"
													},
													{
														"expression": {
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4908:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4919:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 453,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "4923:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 454,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4937:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4923:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4919:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4908:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 458,
														"nodeType": "ExpressionStatement",
														"src": "4908:36:2"
													},
													{
														"expression": {
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 459,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4978:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4989:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 461,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "4993:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 462,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5007:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4993:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4989:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4978:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "4978:36:2"
													},
													{
														"expression": {
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 467,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5049:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5060:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 469,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "5064:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 470,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5078:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5064:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5060:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5049:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 474,
														"nodeType": "ExpressionStatement",
														"src": "5049:36:2"
													},
													{
														"expression": {
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 475,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5519:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 476,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5528:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 477,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "5536:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5528:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5519:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 480,
														"nodeType": "ExpressionStatement",
														"src": "5519:24:2"
													},
													{
														"expression": {
															"id": 481,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5564:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 373,
														"id": 482,
														"nodeType": "Return",
														"src": "5557:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1683:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1694:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1705:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1749:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:2"
									},
									"scope": 1137,
									"src": "1667:3920:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5829:189:2",
										"statements": [
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5847:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "5839:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5839:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"id": 503,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5863:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 504,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "5866:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 505,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5869:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															485,
															529
														],
														"referencedDeclaration": 485,
														"src": "5856:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5839:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$278",
															"typeString": "enum Math.Rounding"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 508,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "5895:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$278",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 509,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "5907:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$278_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 276,
															"src": "5907:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$278",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5895:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "5929:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 514,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "5932:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 515,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "5935:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 512,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5922:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5922:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5895:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "IfStatement",
												"src": "5891:98:2",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "5953:36:2",
													"statements": [
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 520,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "5967:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5977:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5967:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "5967:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 526,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 501,
													"src": "6005:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 499,
												"id": 527,
												"nodeType": "Return",
												"src": "5998:13:2"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5593:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5728:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5743:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5735:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5754:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5746:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5765:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5757:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5787:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5778:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$278",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 493,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "5778:8:2"
													},
													"referencedDeclaration": 278,
													"src": "5778:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$278",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5734:62:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5819:9:2"
									},
									"scope": 1137,
									"src": "5719:299:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "6294:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6308:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6313:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6308:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "6304:45:2",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "6316:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6337:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 536,
															"id": 541,
															"nodeType": "Return",
															"src": "6330:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7036:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "7028:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7045:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 548,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "7056:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 547,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			809,
																			845
																		],
																		"referencedDeclaration": 809,
																		"src": "7051:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7051:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7062:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7051:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 552,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7050:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:36:2"
											},
											{
												"id": 639,
												"nodeType": "UncheckedBlock",
												"src": "7465:408:2",
												"statements": [
													{
														"expression": {
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 555,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7489:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 556,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7499:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 557,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7508:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 558,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7512:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7508:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7499:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 561,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7523:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7498:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7489:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 565,
														"nodeType": "ExpressionStatement",
														"src": "7489:35:2"
													},
													{
														"expression": {
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 566,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7538:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 567,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7548:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7557:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 569,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7561:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7557:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7548:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 572,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7547:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7572:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7547:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7538:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 576,
														"nodeType": "ExpressionStatement",
														"src": "7538:35:2"
													},
													{
														"expression": {
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 577,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7587:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 578,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7597:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 579,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7606:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 580,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7610:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7606:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7597:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7596:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7596:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7587:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 587,
														"nodeType": "ExpressionStatement",
														"src": "7587:35:2"
													},
													{
														"expression": {
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 588,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7636:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 589,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7646:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 590,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7655:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 591,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7659:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7655:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7646:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 594,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7645:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7670:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7645:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7636:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 598,
														"nodeType": "ExpressionStatement",
														"src": "7636:35:2"
													},
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 599,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7685:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 600,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7695:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 601,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7704:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 602,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7708:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7704:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7695:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7694:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7719:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7694:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7685:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "7685:35:2"
													},
													{
														"expression": {
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 610,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7734:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 611,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7744:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 612,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7753:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 613,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7757:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7753:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7744:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7768:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7743:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7734:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 620,
														"nodeType": "ExpressionStatement",
														"src": "7734:35:2"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 621,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7783:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 622,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "7793:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 623,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7802:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 624,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7806:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7802:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7793:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 627,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7792:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7817:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7792:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7783:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "7783:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 633,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "7843:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 634,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "7851:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 635,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "7855:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7851:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 632,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "7839:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7839:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 536,
														"id": 638,
														"nodeType": "Return",
														"src": "7832:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "6024:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6246:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6259:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6251:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:11:2"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6285:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6284:9:2"
									},
									"scope": 1137,
									"src": "6237:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "8055:161:2",
										"statements": [
											{
												"id": 675,
												"nodeType": "UncheckedBlock",
												"src": "8065:145:2",
												"statements": [
													{
														"assignments": [
															653
														],
														"declarations": [
															{
																"constant": false,
																"id": 653,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8097:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 675,
																"src": "8089:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 652,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8089:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 657,
														"initialValue": {
															"arguments": [
																{
																	"id": 655,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "8111:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 654,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	641,
																	677
																],
																"referencedDeclaration": 641,
																"src": "8106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8106:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8089:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "8134:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$278",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 659,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "8144:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 660,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 278,
																						"src": "8156:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$278_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 276,
																					"src": "8156:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8144:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 663,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 653,
																						"src": "8171:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 664,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 653,
																						"src": "8180:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8171:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 666,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "8189:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8171:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8144:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8197:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8144:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8193:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 672,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8143:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8134:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 651,
														"id": 674,
														"nodeType": "Return",
														"src": "8127:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "7885:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7988:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8001:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "7993:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8013:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "8004:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$278",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "8004:8:2"
													},
													"referencedDeclaration": 278,
													"src": "8004:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$278",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:30:2"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "8046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:9:2"
									},
									"scope": 1137,
									"src": "7979:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "8401:922:2",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8419:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "8411:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8411:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"hexValue": "30",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8428:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8411:18:2"
											},
											{
												"id": 805,
												"nodeType": "UncheckedBlock",
												"src": "8439:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8467:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8476:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8467:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8482:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8467:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 703,
														"nodeType": "IfStatement",
														"src": "8463:99:2",
														"trueBody": {
															"id": 702,
															"nodeType": "Block",
															"src": "8485:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "8503:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8513:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8503:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 697,
																	"nodeType": "ExpressionStatement",
																	"src": "8503:13:2"
																},
																{
																	"expression": {
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "8534:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8544:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8534:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 701,
																	"nodeType": "ExpressionStatement",
																	"src": "8534:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8579:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8588:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8579:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8593:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8579:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 718,
														"nodeType": "IfStatement",
														"src": "8575:96:2",
														"trueBody": {
															"id": 717,
															"nodeType": "Block",
															"src": "8596:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "8614:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8624:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8614:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 712,
																	"nodeType": "ExpressionStatement",
																	"src": "8614:12:2"
																},
																{
																	"expression": {
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "8644:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8654:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8644:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 716,
																	"nodeType": "ExpressionStatement",
																	"src": "8644:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8688:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8697:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8688:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8702:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8688:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 733,
														"nodeType": "IfStatement",
														"src": "8684:96:2",
														"trueBody": {
															"id": 732,
															"nodeType": "Block",
															"src": "8705:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "8723:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8733:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8723:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 727,
																	"nodeType": "ExpressionStatement",
																	"src": "8723:12:2"
																},
																{
																	"expression": {
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "8753:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8763:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8753:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 731,
																	"nodeType": "ExpressionStatement",
																	"src": "8753:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8797:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8806:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8797:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8797:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 748,
														"nodeType": "IfStatement",
														"src": "8793:96:2",
														"trueBody": {
															"id": 747,
															"nodeType": "Block",
															"src": "8814:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 739,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "8832:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8842:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8832:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 742,
																	"nodeType": "ExpressionStatement",
																	"src": "8832:12:2"
																},
																{
																	"expression": {
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 743,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "8862:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8872:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8862:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 746,
																	"nodeType": "ExpressionStatement",
																	"src": "8862:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 749,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8906:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8906:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8919:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8906:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 763,
														"nodeType": "IfStatement",
														"src": "8902:93:2",
														"trueBody": {
															"id": 762,
															"nodeType": "Block",
															"src": "8922:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 754,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "8940:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8950:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8940:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 757,
																	"nodeType": "ExpressionStatement",
																	"src": "8940:11:2"
																},
																{
																	"expression": {
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 758,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "8969:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8979:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8969:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 761,
																	"nodeType": "ExpressionStatement",
																	"src": "8969:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9012:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9021:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9012:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9025:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9012:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 778,
														"nodeType": "IfStatement",
														"src": "9008:93:2",
														"trueBody": {
															"id": 777,
															"nodeType": "Block",
															"src": "9028:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 769,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "9046:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9046:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 772,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:11:2"
																},
																{
																	"expression": {
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 773,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "9075:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9085:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9075:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 776,
																	"nodeType": "ExpressionStatement",
																	"src": "9075:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 779,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9127:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9118:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9118:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 793,
														"nodeType": "IfStatement",
														"src": "9114:93:2",
														"trueBody": {
															"id": 792,
															"nodeType": "Block",
															"src": "9134:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 784,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "9152:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9162:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9152:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 787,
																	"nodeType": "ExpressionStatement",
																	"src": "9152:11:2"
																},
																{
																	"expression": {
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 788,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "9181:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9191:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9181:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 791,
																	"nodeType": "ExpressionStatement",
																	"src": "9181:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 794,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "9224:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9233:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9224:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9237:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9224:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 804,
														"nodeType": "IfStatement",
														"src": "9220:64:2",
														"trueBody": {
															"id": 803,
															"nodeType": "Block",
															"src": "9240:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "9258:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9268:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9258:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 802,
																	"nodeType": "ExpressionStatement",
																	"src": "9258:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 806,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "9310:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 807,
												"nodeType": "Return",
												"src": "9303:13:2"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "8222:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8349:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8362:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "8354:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:15:2"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "8392:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8391:9:2"
									},
									"scope": 1137,
									"src": "8340:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "9556:165:2",
										"statements": [
											{
												"id": 843,
												"nodeType": "UncheckedBlock",
												"src": "9566:149:2",
												"statements": [
													{
														"assignments": [
															821
														],
														"declarations": [
															{
																"constant": false,
																"id": 821,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9598:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 843,
																"src": "9590:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9590:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 825,
														"initialValue": {
															"arguments": [
																{
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "9612:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 822,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	809,
																	845
																],
																"referencedDeclaration": 809,
																"src": "9607:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9607:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9590:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "9639:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$278",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 827,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "9649:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 828,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 278,
																						"src": "9661:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$278_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 276,
																					"src": "9661:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9649:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 831,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9676:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 832,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 821,
																						"src": "9681:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9676:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 834,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 812,
																					"src": "9690:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9676:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9649:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9702:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9649:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9698:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 840,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9648:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9639:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 819,
														"id": 842,
														"nodeType": "Return",
														"src": "9632:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "9329:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9485:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "9490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9514:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "9505:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$278",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 813,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "9505:8:2"
													},
													"referencedDeclaration": 278,
													"src": "9505:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$278",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9489:34:2"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "9547:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9546:9:2"
									},
									"scope": 1137,
									"src": "9476:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "9908:854:2",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9926:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "9918:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"hexValue": "30",
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9935:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:18:2"
											},
											{
												"id": 970,
												"nodeType": "UncheckedBlock",
												"src": "9946:787:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 857,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "9974:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9983:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9989:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "9983:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "9974:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "9970:103:2",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "9993:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10011:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10020:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10020:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10011:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10011:17:2"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10046:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10056:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10046:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "10046:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10090:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10105:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10099:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10090:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 890,
														"nodeType": "IfStatement",
														"src": "10086:103:2",
														"trueBody": {
															"id": 889,
															"nodeType": "Block",
															"src": "10109:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10127:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10136:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10142:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10136:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10127:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 884,
																	"nodeType": "ExpressionStatement",
																	"src": "10127:17:2"
																},
																{
																	"expression": {
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 885,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10162:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10172:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10162:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 888,
																	"nodeType": "ExpressionStatement",
																	"src": "10162:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 891,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10206:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10221:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10215:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10206:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 907,
														"nodeType": "IfStatement",
														"src": "10202:103:2",
														"trueBody": {
															"id": 906,
															"nodeType": "Block",
															"src": "10225:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 896,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10243:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10252:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10258:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10252:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10243:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10243:17:2"
																},
																{
																	"expression": {
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 902,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10278:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10288:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10278:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 905,
																	"nodeType": "ExpressionStatement",
																	"src": "10278:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10322:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10331:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10337:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10331:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10322:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 924,
														"nodeType": "IfStatement",
														"src": "10318:100:2",
														"trueBody": {
															"id": 923,
															"nodeType": "Block",
															"src": "10340:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10358:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10367:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10373:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10358:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 918,
																	"nodeType": "ExpressionStatement",
																	"src": "10358:16:2"
																},
																{
																	"expression": {
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 919,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10392:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10402:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10392:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 922,
																	"nodeType": "ExpressionStatement",
																	"src": "10392:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10435:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10444:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10450:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10444:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10435:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 941,
														"nodeType": "IfStatement",
														"src": "10431:100:2",
														"trueBody": {
															"id": 940,
															"nodeType": "Block",
															"src": "10453:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10471:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10480:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10486:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10480:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10471:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 935,
																	"nodeType": "ExpressionStatement",
																	"src": "10471:16:2"
																},
																{
																	"expression": {
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 936,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10505:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10515:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10505:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 939,
																	"nodeType": "ExpressionStatement",
																	"src": "10505:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10548:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10557:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10563:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10557:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10548:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 958,
														"nodeType": "IfStatement",
														"src": "10544:100:2",
														"trueBody": {
															"id": 957,
															"nodeType": "Block",
															"src": "10566:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "10584:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10593:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10599:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10584:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 952,
																	"nodeType": "ExpressionStatement",
																	"src": "10584:16:2"
																},
																{
																	"expression": {
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 953,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10618:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10628:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10618:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 956,
																	"nodeType": "ExpressionStatement",
																	"src": "10618:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10661:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10670:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10676:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10670:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10661:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 969,
														"nodeType": "IfStatement",
														"src": "10657:66:2",
														"trueBody": {
															"id": 968,
															"nodeType": "Block",
															"src": "10679:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "10697:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10707:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10697:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "10697:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 971,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 854,
													"src": "10749:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 972,
												"nodeType": "Return",
												"src": "10742:13:2"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "9727:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9855:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "9861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9860:15:2"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "9899:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9898:9:2"
									},
									"scope": 1137,
									"src": "9846:916:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10997:167:2",
										"statements": [
											{
												"id": 1008,
												"nodeType": "UncheckedBlock",
												"src": "11007:151:2",
												"statements": [
													{
														"assignments": [
															986
														],
														"declarations": [
															{
																"constant": false,
																"id": 986,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11039:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1008,
																"src": "11031:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11031:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 990,
														"initialValue": {
															"arguments": [
																{
																	"id": 988,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "11054:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 987,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	974,
																	1010
																],
																"referencedDeclaration": 974,
																"src": "11048:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11048:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11031:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "11081:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$278",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 992,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "11091:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 993,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 278,
																						"src": "11103:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$278_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 276,
																					"src": "11103:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11091:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11118:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 997,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 986,
																						"src": "11124:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11118:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 999,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 977,
																					"src": "11133:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11118:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11091:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11145:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11091:55:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11141:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11090:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11081:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 984,
														"id": 1007,
														"nodeType": "Return",
														"src": "11074:73:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "10768:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10925:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10939:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10931:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10955:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10946:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$278",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 979,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 978,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "10946:8:2"
													},
													"referencedDeclaration": 278,
													"src": "10946:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$278",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10930:34:2"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:9:2"
									},
									"scope": 1137,
									"src": "10916:248:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "11478:600:2",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11496:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "11488:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11488:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"hexValue": "30",
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11505:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11488:18:2"
											},
											{
												"id": 1093,
												"nodeType": "UncheckedBlock",
												"src": "11516:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1022,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "11544:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11544:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11559:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11544:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1036,
														"nodeType": "IfStatement",
														"src": "11540:98:2",
														"trueBody": {
															"id": 1035,
															"nodeType": "Block",
															"src": "11562:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1027,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "11580:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11590:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11580:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1030,
																	"nodeType": "ExpressionStatement",
																	"src": "11580:13:2"
																},
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "11611:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11621:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11611:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "11611:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "11655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11664:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11655:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11669:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11655:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "11651:95:2",
														"trueBody": {
															"id": 1050,
															"nodeType": "Block",
															"src": "11672:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1042,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "11690:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11700:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11690:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "11690:12:2"
																},
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "11720:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11730:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11720:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "11720:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "11763:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11763:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11777:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11763:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1066,
														"nodeType": "IfStatement",
														"src": "11759:95:2",
														"trueBody": {
															"id": 1065,
															"nodeType": "Block",
															"src": "11780:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1057,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "11798:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11808:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11798:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1060,
																	"nodeType": "ExpressionStatement",
																	"src": "11798:12:2"
																},
																{
																	"expression": {
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1061,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "11828:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11838:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11828:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1064,
																	"nodeType": "ExpressionStatement",
																	"src": "11828:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1067,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "11871:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11880:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11871:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11885:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11871:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1081,
														"nodeType": "IfStatement",
														"src": "11867:95:2",
														"trueBody": {
															"id": 1080,
															"nodeType": "Block",
															"src": "11888:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1072,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "11906:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11916:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11906:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1075,
																	"nodeType": "ExpressionStatement",
																	"src": "11906:12:2"
																},
																{
																	"expression": {
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1076,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "11936:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11946:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11936:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1079,
																	"nodeType": "ExpressionStatement",
																	"src": "11936:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1082,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "11979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11988:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11979:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11992:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11979:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1092,
														"nodeType": "IfStatement",
														"src": "11975:64:2",
														"trueBody": {
															"id": 1091,
															"nodeType": "Block",
															"src": "11995:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1087,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "12013:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12013:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1090,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1094,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "12065:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1095,
												"nodeType": "Return",
												"src": "12058:13:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11170:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11424:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11439:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "11431:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11430:15:2"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "11469:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11468:9:2"
									},
									"scope": 1137,
									"src": "11415:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "12315:174:2",
										"statements": [
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "12325:158:2",
												"statements": [
													{
														"assignments": [
															1109
														],
														"declarations": [
															{
																"constant": false,
																"id": 1109,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12357:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1134,
																"src": "12349:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12349:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1113,
														"initialValue": {
															"arguments": [
																{
																	"id": 1111,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "12373:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1110,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1097,
																	1136
																],
																"referencedDeclaration": 1097,
																"src": "12366:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12366:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12349:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1114,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "12400:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$278",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1115,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "12410:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1116,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 278,
																						"src": "12422:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$278_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 276,
																					"src": "12422:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$278",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12410:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12437:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1120,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1109,
																									"src": "12443:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1121,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12453:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12443:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1123,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12442:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12437:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1125,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "12458:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12437:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12410:53:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12470:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12410:61:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12466:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12409:63:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12400:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1107,
														"id": 1133,
														"nodeType": "Return",
														"src": "12393:79:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "12084:144:2",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12242:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12257:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "12249:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12273:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "12264:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$278",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1101,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "12264:8:2"
													},
													"referencedDeclaration": 278,
													"src": "12264:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$278",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12248:34:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "12306:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12306:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12305:9:2"
									},
									"scope": 1137,
									"src": "12233:256:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1138,
							"src": "202:12289:2",
							"usedErrors": []
						}
					],
					"src": "103:12389:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1140,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:3",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1242,
							"linearizedBaseContracts": [
								1242
							],
							"name": "SignedMath",
							"nameLocation": "223:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "375:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1150,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "392:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1151,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1154,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "404:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:3",
													"trueExpression": {
														"id": 1153,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "400:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1156,
												"nodeType": "Return",
												"src": "385:20:3"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:3",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "324:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "334:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1144,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:3"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "367:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1147,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:3"
									},
									"scope": 1242,
									"src": "311:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "554:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1168,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "571:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1169,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "575:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1172,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:3",
													"trueExpression": {
														"id": 1171,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "579:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1174,
												"nodeType": "Return",
												"src": "564:20:3"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:3",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "503:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1160,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "513:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1162,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:3"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "546:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1165,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:3"
									},
									"scope": 1242,
									"src": "490:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "796:162:3",
										"statements": [
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1219,
														"src": "858:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1186,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "870:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1189,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "874:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1191,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1192,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1179,
																				"src": "881:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1193,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "885:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1195,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1198,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1201,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1206,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "930:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1204,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1202,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1211,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1179,
																				"src": "944:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1212,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "948:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1216,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1218,
												"nodeType": "Return",
												"src": "903:48:3"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:3",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "745:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "755:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1180,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:3"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "788:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1183,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:3"
									},
									"scope": 1242,
									"src": "728:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "1102:158:3",
										"statements": [
											{
												"id": 1239,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1230,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "1227:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:3",
																		"subExpression": {
																			"id": 1234,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "1241:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:3",
																	"trueExpression": {
																		"id": 1233,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "1236:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1227,
														"id": 1238,
														"nodeType": "Return",
														"src": "1212:31:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:3",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1060:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:3"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1093:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:3"
									},
									"scope": 1242,
									"src": "1047:213:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1243,
							"src": "215:1047:3",
							"usedErrors": []
						}
					],
					"src": "109:1154:3"
				},
				"id": 3
			}
		}
	}
}